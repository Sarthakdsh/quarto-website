{
  "hash": "ed958263e2a9a46f013241c936832f2c",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Simulating Raman Fiber Amplifiers in Julia: From Theory to High-Performance Code\"\nauthor: \"Sarthak Dash\"\ndate: \"2025-08-09\"\ncategories: [Raman, Julia]\nimage: \"image.jpg\"\ncode-annotations: hover\nbibliography: references.bib\nhighlight-style: monokai\nengine: julia\n---\n\n## üöÄ What You‚Äôll Learn in This Post\n\n-   A quick primer on **Raman fiber amplifiers** and their role in modern **optical communication systems**.\n-   The **physics and equations** behind **Raman gain** and **signal-pump interactions**.\n-   How to **simulate Raman amplifiers** using **Julia programming language** for **high-performance computing**.\n-   Techniques to **optimize Julia code** using **StaticArrays**, **in-place operations**, and **memory-efficient design**.\n-   Visual plot of **power evolution** along the fiber length.\n-   Benchmarking results comparing **Julia vs Python** for scientific simulations.\n-   Access to **Julia code snippets**, explanations, and performance tips for hands-on learning.\n\n## ü§î What is Raman fiber amplifier, and why simulate it?\n\nA **Raman fiber amplifier (RFA)** uses the Raman scattering effect to amplify optical signals directly within the transmission fiber itself. Unlike traditional fiber amplifiers that require special dopants in optical fiber, Raman scattering can turn any ordinary optical fiber into an amplifier, making RFAs incredibly versatile for telecommunications systems.\n\nHere are some of the points why RFAs are revolutionary:\n\n-   **Wavelength flexibility**: Raman amplification can be done at any wavelength and in any conventional optical fiber.\n-   **Broad bandwidth**: Leads to amplification of large range of wavelengths, essential for dense wavelength division multiplexing (WDM) systems\n-   **Distributed amplification**: The entire fiber becomes the gain medium, providing amplification along the transmission path\n\nRFAs are now commonly used in long-haul communication systems that are designed to operate over thousands of kilometers. Simulating these RFAs is crucial, as complex nonlinear interactions between pump and signal beams makes analytical solutions impossible for a practical situation. By modeling the coupled ordinary differential equations (ODE) that govern Raman amplification, we can optimize several aspects of the amplifier design such as pump parameters, fiber lengths, and design systems before performing an expensive experimental validation. Also simulation provides us a handy tool to understand the workings of a system by varying only the desired parameter, which is not possible in a practical system. Now let's discuss why Julia programming language is a good choice to do the simulation.\n\n## ü§∑‚Äç‚ôÇÔ∏è Why Julia?\n\nJulia is uniquely positioned for scientific simulations like RFAs. Here are some of the reasons:\n\n-   **Performance**: With Julia, one can achieve C-like speeds while having Python-like readability. For iterative ODE solving required in RFA simulations, this can lead to dramatically faster computation times‚Äîoften 10-100x faster than Python\n-   **Simplicity**: The syntax is intuitive for scientists and engineers. For example, one can write `dP‚Çö = gR*P‚Çö*P‚Çõ - Œ±‚Çõ*P‚Çõ` and it looks exactly like the mathematical equation\n-   **Rich Ecosystem**: [DifferentialEquations.jl](https://docs.sciml.ai/DiffEqDocs/stable/) is, IMO, the most sophisticated ODE solver suite in any language, with over 200 methods for solving variety of differential equations, with a focus on speed and flexibility\n-   **Scientific Focus**: Julia was designed from the ground up for numerical and scientific computing. It handles the \"two-language problem\" where one develop the prototype in a high-level language (eg: Python, MATLAB) but implement the main computation in a low-level language for performance (C, FORTRAN).\n\n## üìò Basic theory Refresher\n\nNow before we dive deeper into writing the codes, lets discuss the theory a bit.\n\n### Brief overview of Raman amplification\n\nWhen light interacts with molecular vibrations in glass, there can be transfer of energy between different wavelengths. This is known as **Raman scattering**. Imagine a high energy photon (pump) that collide with vibrating fiber molecules (phonons), giving up some of their energy becoming a lower energy photon (Stokes) at lower frequency or longer wavelength (The pump photons can also receive energy from phonons leading to higher frequency anti-Stokes photons, but this is usually a weak process at room temperatures). If a signal photon is already present at Stokes frequency, it can lead to **stimulated Raman scattering** leading to amplification of the signal wave at Stokes frequency (and thus Raman gain).\n\n### The power-balance equation\n\nThe heart of Raman amplifier simulation lies in two coupled ordinary differential equations (ODEs) that describe how pump and signal (Stokes) powers evolve along the fiber [@agrawal2013; @headley2005] $$\n\\begin{align} \\\\\n&\\mathbf{Signal\\ equation:}\n&\\frac{dP_{s}}{dz}&= g_{R}P_{p}P_{s} - \\alpha_{s}P_{s} \\\\\n&\\mathbf{Pump\\ equation:}\n&\\frac{dP_{p}}{dz}&= -\\frac{\\nu_{p}}{\\nu_{s} }g_{R}P_{p}P_{s} - \\alpha_{p}P_{p}\n\\end{align}\n$$ {#eq-power-balance1} where:\n\n-   $P_{s}$ and $P_{p}$ are signal and pump powers that are a function of position $z$\n-   $g_{R}$ is the Raman gain efficiency\n-   $\\alpha_{s}$ and $\\alpha_{p}$ are signal and pump attenuation coefficients\n-   $\\nu_{s}$ and $\\nu_{p}$ are signal and pump frequencies\n\n![Diagram illustrating the power-balance equation](power%20balance.png){#fig-power-balance .lightbox fig-align=\"center\" width=\"80%\"}\n\nThe $g_{R}P_{p}P_{s}$ term is the power transfer from pump to signal due to stimulated Raman scattering and the term $-\\frac{\\nu_{p}}{\\nu_{s} }g_{R}P_{p}P_{s}$ represents the power loss in the pump as it is transferred to signal. The reason of the $\\nu_{p}/\\nu_{s}$ term is due to photon number conservation (in absence of loss) [@agrawal2013].\n\nThe power-balance equations describes the initial pump and signal power $P_{p}(0)$ and $P_{s}(0)$ evolves along the fiber length $L$.\n\n#### Key assumptions\n\nThe above equations are derived with these assumptions\n\n-   **CW or quasi-CW regime**: both pump and signal assumed to be close to continuous-wave(CW) and so no time dependence is considered, valid assumption in most telecommunications applications.\n-   **Single-mode fiber**: both pump and signal waves are in the fundamental mode of fiber, appropriate for standard telecom fibers\n-   **Co-propagating**: both pump and signal waves travel in the same direction, valid in most cases and simple to begin with simulation compared to the counter-propagating case.\n-   **No dispersion**: the fiber has same mode solutions at both pump and signal waves, an assumption we can easily relax, considered initially only to simplify the simulation.\n\nThe beauty of these equations, under the given assumptions, lies in their simplicity ‚Äî yet they capture the essential physics of energy transfer, amplification, and loss in fiber Raman amplifiers.\n\n## üß™ Performing the Simulation in Julia\n\n### Setting up\n\nFirst, if you don‚Äôt have Julia installed, then download and install [Julia programming language](https://julialang.org/). Follow the [installing Julia](https://julialang.org/install/) instructions. You can also check the [documentation](https://docs.julialang.org/en/v1/) to learn more about Julia. We need several key packages\n\n``` julia\nusing Pkg\nPkg.add([\"DifferentialEquations\", \n      \"Plots\", \n      \"BenchmarkTools\", \n      \"LaTeXStrings\", \n      \"StaticArrays\"])\n```\n\n-   We already know about [DifferentialEquations.jl](https://docs.sciml.ai/DiffEqDocs/stable/), the powerhouse ODE solver suite with over 200 methods. This gives us access to robust, high-performance solvers specifically designed for stiff systems common in nonlinear optics.\n-   [Plots.jl](https://docs.juliaplots.org/latest/) is Julia's most popular plotting package. Its recipe system leads to `plot(sol)` automatically knowing how to visualize ODE solutions‚Äîperfect for our simulations.\n-   [BenchmarkTools.jl](https://juliaci.github.io/BenchmarkTools.jl/stable/) provide professional-grade benchmarking tools in Julia. Essential for optimizing our simulation performance and understanding computational bottlenecks.\n-   [LaTeXStrings.jl](https://github.com/JuliaStrings/LaTeXStrings.jl) makes it easy to type LaTeX strings in Julia.\n-   [StaticArrays.jl](https://juliaarrays.github.io/StaticArrays.jl/stable/) helps in implementing statically sized arrays in Julia which can lead to performance advantages. More on this will be discussed later.\n\nNow let's import the necessary packages\n\n::: {#2 .cell execution_count=1}\n``` {.julia .cell-code}\nusing DifferentialEquations, Plots, LaTeXStrings, BenchmarkTools\n```\n:::\n\n\n\n### Coding the Physics\n\nLet's implement our Raman amplifier simulation step by step:\n\n#### Step 1: Define the simulation parameters\n\n::: {#4 .cell execution_count=1}\n``` {.julia .cell-code}\n# ------- Signal parameters -------\nŒªs = 1550.0   # Signal wavelength (nm)  \nPs_0 = 1e-4   # Input signal power (W)       \n\n# ------- Pump parameters -------\nŒªp = 1450.0   # Pump wavelength (nm)\nPp_0 = 2.0      # Input pump power (W)         \n\n# ------- Fiber parameters -------\nŒ±_p = 0.23     # Pump attenuation (dB/km)       \nŒ±_s = 0.19     # Signal attenuation (dB/km)     \ngR = 0.4       # Raman gain efficiency (1/W/km)\nL = 50         # Length of fiber (km)\n```\n:::\n\n\n\nThese parameters represent a typical telecommunications fiber Raman amplifier. The fiber parameters taken are for a standard single-mode fiber (SMF).\n\n#### Step 2: Set up the ODE system\n\n::: {#6 .cell execution_count=1}\n``` {.julia .cell-code}\nfunction Raman1!(dP, P, a, z)\n    Pp, Ps = P\n    r, Œ±_p, Œ±_s, gR = a\n\n    dP[1] = -Œ±_p * Pp - r * gR * Pp * Ps # dPp/dz\n    dP[2] = -Œ±_s * Ps + gR * Pp * Ps   # dPs/dz\nend\n```\n:::\n\n\n\nThis function defines our ODE system in the form required by `DifferentialEquations.jl`. The `!` indicates an in-place function that modifies dP directly ‚Äî more efficient for large systems. Here $r$ denotes the ratio of pump to signal frequency $r=\\nu_{p}/\\nu_{s}$\n\n#### Step 3: Configure and solve the ODE system\n\nFirst let's define some convenience functions to convert loss from dB/km to 1/km unit and calculate frequency in THz when wavelength is given in nm.\n\n::: {#8 .cell execution_count=1}\n``` {.julia .cell-code}\n# ------- Convenience functions -------\nconst c = 299792.458;  # speed of light in nm THz\nŒ±_lin(dB::Real) = dB / (10 * log10(exp(1))) # convert loss from dB to linear # <1>\nget_ŒΩ(Œª::Real) = c / Œª # get frequency (THz) from wavelength (nm)                      # <1>\nto_dBm(P::Real) = 10 * log10(P * 1e3) # convert power from Watt to dBm # <1>\n```\n:::\n\n\n\n1.  By appending `::Real` we are saying the function can take only real numbers like integers, floats, fractions ...\n\nNow we configure the system and solve the ODE.\n\n::: {#10 .cell execution_count=1}\n``` {.julia .cell-code}\n# Initial conditions and span\nP0 = [Pp_0, Ps_0]\nzspan = (0.0, L)\n\n# parameters\na = (get_ŒΩ(Œªp)/get_ŒΩ(Œªs), Œ±_lin(Œ±_p), Œ±_lin(Œ±_s), gR) \n\n# create and solve ode problem\nprob = ODEProblem(Raman1!, P0, zspan, a) # creating the ODE problem\nsol = solve(prob,Tsit5(), saveat=L/1000) # solving the ODE problem\n```\n:::\n\n\n\nWe use `Tsit5()`, a high-quality Runge-Kutta method that's excellent for non-stiff problems. The `saveat` option ensures we get solutions at regular intervals for smooth plotting.\n\n#### Step 4: Visualize the results\n\n::: {#cell-fig-Raman .cell execution_count=1}\n``` {.julia .cell-code}\nplot(sol.t, [to_dBm.(sol[1,:]), to_dBm.(sol[2,:])],\n    linewidth = 2,\n    xaxis=\"Length (km)\",\n    yaxis=\"Power (dBm)\",\n    label =[L\"P_p\" L\"P_s\"],\n    legendfontsize=14,\n    legend=:right,\n    margin=10Plots.mm)\n```\n\n::: {#fig-raman .cell-output .cell-output-display execution_count=1}\n```{=html}\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"672\" height=\"480\" viewBox=\"0 0 2688 1920\">\n<defs>\n  <clipPath id=\"clip300\">\n    <rect x=\"0\" y=\"0\" width=\"2688\" height=\"1920\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip300)\" d=\"M0 1920 L2688 1920 L2688 0 L0 0  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip301\">\n    <rect x=\"537\" y=\"0\" width=\"1883\" height=\"1883\"/>\n  </clipPath>\n</defs>\n<path clip-path=\"url(#clip300)\" d=\"M247.352 1680.33 L2499.02 1680.33 L2499.02 188.976 L247.352 188.976  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<defs>\n  <clipPath id=\"clip302\">\n    <rect x=\"247\" y=\"188\" width=\"2253\" height=\"1492\"/>\n  </clipPath>\n</defs>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"311.079,1680.33 311.079,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"735.923,1680.33 735.923,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1160.77,1680.33 1160.77,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"1585.61,1680.33 1585.61,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2010.45,1680.33 2010.45,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"2435.3,1680.33 2435.3,188.976 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"247.352,1638.12 2499.02,1638.12 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"247.352,1311 2499.02,1311 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"247.352,983.888 2499.02,983.888 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"247.352,656.772 2499.02,656.772 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:2; stroke-opacity:0.1; fill:none\" points=\"247.352,329.656 2499.02,329.656 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,1680.33 2499.02,1680.33 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"311.079,1680.33 311.079,1661.43 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"735.923,1680.33 735.923,1661.43 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1160.77,1680.33 1160.77,1661.43 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"1585.61,1680.33 1585.61,1661.43 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2010.45,1680.33 2010.45,1661.43 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2435.3,1680.33 2435.3,1661.43 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M311.079 1713.55 Q307.468 1713.55 305.639 1717.12 Q303.834 1720.66 303.834 1727.79 Q303.834 1734.89 305.639 1738.46 Q307.468 1742 311.079 1742 Q314.713 1742 316.519 1738.46 Q318.347 1734.89 318.347 1727.79 Q318.347 1720.66 316.519 1717.12 Q314.713 1713.55 311.079 1713.55 M311.079 1709.85 Q316.889 1709.85 319.945 1714.45 Q323.023 1719.04 323.023 1727.79 Q323.023 1736.51 319.945 1741.12 Q316.889 1745.7 311.079 1745.7 Q305.269 1745.7 302.19 1741.12 Q299.135 1736.51 299.135 1727.79 Q299.135 1719.04 302.19 1714.45 Q305.269 1709.85 311.079 1709.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M710.61 1741.1 L718.249 1741.1 L718.249 1714.73 L709.939 1716.4 L709.939 1712.14 L718.203 1710.47 L722.879 1710.47 L722.879 1741.1 L730.518 1741.1 L730.518 1745.03 L710.61 1745.03 L710.61 1741.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M749.962 1713.55 Q746.351 1713.55 744.522 1717.12 Q742.717 1720.66 742.717 1727.79 Q742.717 1734.89 744.522 1738.46 Q746.351 1742 749.962 1742 Q753.596 1742 755.402 1738.46 Q757.23 1734.89 757.23 1727.79 Q757.23 1720.66 755.402 1717.12 Q753.596 1713.55 749.962 1713.55 M749.962 1709.85 Q755.772 1709.85 758.828 1714.45 Q761.906 1719.04 761.906 1727.79 Q761.906 1736.51 758.828 1741.12 Q755.772 1745.7 749.962 1745.7 Q744.152 1745.7 741.073 1741.12 Q738.017 1736.51 738.017 1727.79 Q738.017 1719.04 741.073 1714.45 Q744.152 1709.85 749.962 1709.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1139.54 1741.1 L1155.86 1741.1 L1155.86 1745.03 L1133.91 1745.03 L1133.91 1741.1 Q1136.58 1738.34 1141.16 1733.71 Q1145.77 1729.06 1146.95 1727.72 Q1149.19 1725.19 1150.07 1723.46 Q1150.97 1721.7 1150.97 1720.01 Q1150.97 1717.25 1149.03 1715.52 Q1147.11 1713.78 1144.01 1713.78 Q1141.81 1713.78 1139.35 1714.55 Q1136.92 1715.31 1134.15 1716.86 L1134.15 1712.14 Q1136.97 1711 1139.42 1710.43 Q1141.88 1709.85 1143.91 1709.85 Q1149.28 1709.85 1152.48 1712.53 Q1155.67 1715.22 1155.67 1719.71 Q1155.67 1721.84 1154.86 1723.76 Q1154.08 1725.66 1151.97 1728.25 Q1151.39 1728.92 1148.29 1732.14 Q1145.19 1735.33 1139.54 1741.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1175.67 1713.55 Q1172.06 1713.55 1170.23 1717.12 Q1168.43 1720.66 1168.43 1727.79 Q1168.43 1734.89 1170.23 1738.46 Q1172.06 1742 1175.67 1742 Q1179.31 1742 1181.11 1738.46 Q1182.94 1734.89 1182.94 1727.79 Q1182.94 1720.66 1181.11 1717.12 Q1179.31 1713.55 1175.67 1713.55 M1175.67 1709.85 Q1181.48 1709.85 1184.54 1714.45 Q1187.62 1719.04 1187.62 1727.79 Q1187.62 1736.51 1184.54 1741.12 Q1181.48 1745.7 1175.67 1745.7 Q1169.86 1745.7 1166.78 1741.12 Q1163.73 1736.51 1163.73 1727.79 Q1163.73 1719.04 1166.78 1714.45 Q1169.86 1709.85 1175.67 1709.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1574.45 1726.4 Q1577.81 1727.11 1579.68 1729.38 Q1581.58 1731.65 1581.58 1734.99 Q1581.58 1740.1 1578.06 1742.9 Q1574.55 1745.7 1568.06 1745.7 Q1565.89 1745.7 1563.57 1745.26 Q1561.28 1744.85 1558.83 1743.99 L1558.83 1739.48 Q1560.77 1740.61 1563.09 1741.19 Q1565.4 1741.77 1567.92 1741.77 Q1572.32 1741.77 1574.61 1740.03 Q1576.93 1738.3 1576.93 1734.99 Q1576.93 1731.93 1574.78 1730.22 Q1572.65 1728.48 1568.83 1728.48 L1564.8 1728.48 L1564.8 1724.64 L1569.01 1724.64 Q1572.46 1724.64 1574.29 1723.27 Q1576.12 1721.88 1576.12 1719.29 Q1576.12 1716.63 1574.22 1715.22 Q1572.35 1713.78 1568.83 1713.78 Q1566.91 1713.78 1564.71 1714.2 Q1562.51 1714.62 1559.87 1715.49 L1559.87 1711.33 Q1562.53 1710.59 1564.85 1710.22 Q1567.18 1709.85 1569.24 1709.85 Q1574.57 1709.85 1577.67 1712.28 Q1580.77 1714.68 1580.77 1718.8 Q1580.77 1721.68 1579.13 1723.67 Q1577.48 1725.63 1574.45 1726.4 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1600.45 1713.55 Q1596.84 1713.55 1595.01 1717.12 Q1593.2 1720.66 1593.2 1727.79 Q1593.2 1734.89 1595.01 1738.46 Q1596.84 1742 1600.45 1742 Q1604.08 1742 1605.89 1738.46 Q1607.72 1734.89 1607.72 1727.79 Q1607.72 1720.66 1605.89 1717.12 Q1604.08 1713.55 1600.45 1713.55 M1600.45 1709.85 Q1606.26 1709.85 1609.31 1714.45 Q1612.39 1719.04 1612.39 1727.79 Q1612.39 1736.51 1609.31 1741.12 Q1606.26 1745.7 1600.45 1745.7 Q1594.64 1745.7 1591.56 1741.12 Q1588.5 1736.51 1588.5 1727.79 Q1588.5 1719.04 1591.56 1714.45 Q1594.64 1709.85 1600.45 1709.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1998.62 1714.55 L1986.82 1732.99 L1998.62 1732.99 L1998.62 1714.55 M1997.4 1710.47 L2003.28 1710.47 L2003.28 1732.99 L2008.21 1732.99 L2008.21 1736.88 L2003.28 1736.88 L2003.28 1745.03 L1998.62 1745.03 L1998.62 1736.88 L1983.02 1736.88 L1983.02 1732.37 L1997.4 1710.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2025.94 1713.55 Q2022.33 1713.55 2020.5 1717.12 Q2018.69 1720.66 2018.69 1727.79 Q2018.69 1734.89 2020.5 1738.46 Q2022.33 1742 2025.94 1742 Q2029.57 1742 2031.38 1738.46 Q2033.21 1734.89 2033.21 1727.79 Q2033.21 1720.66 2031.38 1717.12 Q2029.57 1713.55 2025.94 1713.55 M2025.94 1709.85 Q2031.75 1709.85 2034.81 1714.45 Q2037.88 1719.04 2037.88 1727.79 Q2037.88 1736.51 2034.81 1741.12 Q2031.75 1745.7 2025.94 1745.7 Q2020.13 1745.7 2017.05 1741.12 Q2014 1736.51 2014 1727.79 Q2014 1719.04 2017.05 1714.45 Q2020.13 1709.85 2025.94 1709.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2410 1710.47 L2428.35 1710.47 L2428.35 1714.41 L2414.28 1714.41 L2414.28 1722.88 Q2415.3 1722.53 2416.32 1722.37 Q2417.33 1722.18 2418.35 1722.18 Q2424.14 1722.18 2427.52 1725.36 Q2430.9 1728.53 2430.9 1733.94 Q2430.9 1739.52 2427.43 1742.62 Q2423.95 1745.7 2417.64 1745.7 Q2415.46 1745.7 2413.19 1745.33 Q2410.95 1744.96 2408.54 1744.22 L2408.54 1739.52 Q2410.62 1740.66 2412.84 1741.21 Q2415.07 1741.77 2417.54 1741.77 Q2421.55 1741.77 2423.89 1739.66 Q2426.22 1737.55 2426.22 1733.94 Q2426.22 1730.33 2423.89 1728.23 Q2421.55 1726.12 2417.54 1726.12 Q2415.67 1726.12 2413.79 1726.54 Q2411.94 1726.95 2410 1727.83 L2410 1710.47 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2450.11 1713.55 Q2446.5 1713.55 2444.67 1717.12 Q2442.87 1720.66 2442.87 1727.79 Q2442.87 1734.89 2444.67 1738.46 Q2446.5 1742 2450.11 1742 Q2453.75 1742 2455.55 1738.46 Q2457.38 1734.89 2457.38 1727.79 Q2457.38 1720.66 2455.55 1717.12 Q2453.75 1713.55 2450.11 1713.55 M2450.11 1709.85 Q2455.92 1709.85 2458.98 1714.45 Q2462.06 1719.04 2462.06 1727.79 Q2462.06 1736.51 2458.98 1741.12 Q2455.92 1745.7 2450.11 1745.7 Q2444.3 1745.7 2441.22 1741.12 Q2438.17 1736.51 2438.17 1727.79 Q2438.17 1719.04 2441.22 1714.45 Q2444.3 1709.85 2450.11 1709.85 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1180.35 1781.99 L1186.78 1781.99 L1186.78 1824.1 L1209.92 1824.1 L1209.92 1829.51 L1180.35 1829.51 L1180.35 1781.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1245.76 1810.22 L1245.76 1813.09 L1218.84 1813.09 Q1219.22 1819.14 1222.46 1822.32 Q1225.74 1825.47 1231.57 1825.47 Q1234.94 1825.47 1238.09 1824.64 Q1241.27 1823.81 1244.39 1822.16 L1244.39 1827.7 Q1241.24 1829.03 1237.93 1829.73 Q1234.62 1830.43 1231.22 1830.43 Q1222.69 1830.43 1217.69 1825.47 Q1212.72 1820.5 1212.72 1812.04 Q1212.72 1803.28 1217.44 1798.16 Q1222.18 1793 1230.2 1793 Q1237.39 1793 1241.56 1797.65 Q1245.76 1802.27 1245.76 1810.22 M1239.91 1808.5 Q1239.84 1803.7 1237.2 1800.83 Q1234.59 1797.97 1230.26 1797.97 Q1225.36 1797.97 1222.4 1800.74 Q1219.47 1803.51 1219.03 1808.54 L1239.91 1808.5 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1285.01 1808 L1285.01 1829.51 L1279.15 1829.51 L1279.15 1808.19 Q1279.15 1803.13 1277.18 1800.61 Q1275.2 1798.1 1271.26 1798.1 Q1266.51 1798.1 1263.78 1801.12 Q1261.04 1804.14 1261.04 1809.36 L1261.04 1829.51 L1255.15 1829.51 L1255.15 1793.86 L1261.04 1793.86 L1261.04 1799.4 Q1263.14 1796.19 1265.97 1794.6 Q1268.84 1793 1272.56 1793 Q1278.71 1793 1281.86 1796.82 Q1285.01 1800.61 1285.01 1808 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1320.15 1811.27 Q1320.15 1804.91 1317.5 1801.41 Q1314.89 1797.91 1310.15 1797.91 Q1305.44 1797.91 1302.8 1801.41 Q1300.19 1804.91 1300.19 1811.27 Q1300.19 1817.61 1302.8 1821.11 Q1305.44 1824.61 1310.15 1824.61 Q1314.89 1824.61 1317.5 1821.11 Q1320.15 1817.61 1320.15 1811.27 M1326 1825.09 Q1326 1834.19 1321.96 1838.61 Q1317.92 1843.07 1309.58 1843.07 Q1306.49 1843.07 1303.75 1842.59 Q1301.02 1842.15 1298.44 1841.19 L1298.44 1835.5 Q1301.02 1836.9 1303.53 1837.56 Q1306.05 1838.23 1308.66 1838.23 Q1314.42 1838.23 1317.28 1835.21 Q1320.15 1832.22 1320.15 1826.14 L1320.15 1823.24 Q1318.33 1826.39 1315.5 1827.95 Q1312.67 1829.51 1308.72 1829.51 Q1302.16 1829.51 1298.15 1824.51 Q1294.14 1819.52 1294.14 1811.27 Q1294.14 1803 1298.15 1798 Q1302.16 1793 1308.72 1793 Q1312.67 1793 1315.5 1794.56 Q1318.33 1796.12 1320.15 1799.27 L1320.15 1793.86 L1326 1793.86 L1326 1825.09 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1343.86 1783.74 L1343.86 1793.86 L1355.92 1793.86 L1355.92 1798.42 L1343.86 1798.42 L1343.86 1817.77 Q1343.86 1822.13 1345.04 1823.37 Q1346.25 1824.61 1349.91 1824.61 L1355.92 1824.61 L1355.92 1829.51 L1349.91 1829.51 Q1343.13 1829.51 1340.55 1827 Q1337.97 1824.45 1337.97 1817.77 L1337.97 1798.42 L1333.67 1798.42 L1333.67 1793.86 L1337.97 1793.86 L1337.97 1783.74 L1343.86 1783.74 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1393.26 1808 L1393.26 1829.51 L1387.4 1829.51 L1387.4 1808.19 Q1387.4 1803.13 1385.43 1800.61 Q1383.45 1798.1 1379.51 1798.1 Q1374.76 1798.1 1372.03 1801.12 Q1369.29 1804.14 1369.29 1809.36 L1369.29 1829.51 L1363.4 1829.51 L1363.4 1779.99 L1369.29 1779.99 L1369.29 1799.4 Q1371.39 1796.19 1374.22 1794.6 Q1377.09 1793 1380.81 1793 Q1386.95 1793 1390.1 1796.82 Q1393.26 1800.61 1393.26 1808 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1439.73 1780.05 Q1435.46 1787.37 1433.39 1794.53 Q1431.32 1801.69 1431.32 1809.05 Q1431.32 1816.4 1433.39 1823.62 Q1435.49 1830.82 1439.73 1838.11 L1434.63 1838.11 Q1429.86 1830.63 1427.47 1823.4 Q1425.12 1816.18 1425.12 1809.05 Q1425.12 1801.95 1427.47 1794.75 Q1429.83 1787.56 1434.63 1780.05 L1439.73 1780.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1450.87 1779.99 L1456.75 1779.99 L1456.75 1809.24 L1474.23 1793.86 L1481.71 1793.86 L1462.8 1810.54 L1482.5 1829.51 L1474.86 1829.51 L1456.75 1812.1 L1456.75 1829.51 L1450.87 1829.51 L1450.87 1779.99 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1516.59 1800.71 Q1518.79 1796.76 1521.84 1794.88 Q1524.9 1793 1529.04 1793 Q1534.61 1793 1537.63 1796.92 Q1540.65 1800.8 1540.65 1808 L1540.65 1829.51 L1534.77 1829.51 L1534.77 1808.19 Q1534.77 1803.06 1532.95 1800.58 Q1531.14 1798.1 1527.41 1798.1 Q1522.86 1798.1 1520.22 1801.12 Q1517.58 1804.14 1517.58 1809.36 L1517.58 1829.51 L1511.69 1829.51 L1511.69 1808.19 Q1511.69 1803.03 1509.88 1800.58 Q1508.06 1798.1 1504.27 1798.1 Q1499.79 1798.1 1497.14 1801.15 Q1494.5 1804.18 1494.5 1809.36 L1494.5 1829.51 L1488.61 1829.51 L1488.61 1793.86 L1494.5 1793.86 L1494.5 1799.4 Q1496.51 1796.12 1499.31 1794.56 Q1502.11 1793 1505.96 1793 Q1509.84 1793 1512.55 1794.98 Q1515.29 1796.95 1516.59 1800.71 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M1551.41 1780.05 L1556.5 1780.05 Q1561.28 1787.56 1563.63 1794.75 Q1566.02 1801.95 1566.02 1809.05 Q1566.02 1816.18 1563.63 1823.4 Q1561.28 1830.63 1556.5 1838.11 L1551.41 1838.11 Q1555.65 1830.82 1557.71 1823.62 Q1559.81 1816.4 1559.81 1809.05 Q1559.81 1801.69 1557.71 1794.53 Q1555.65 1787.37 1551.41 1780.05 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,1680.33 247.352,188.976 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,1638.12 266.25,1638.12 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,1311 266.25,1311 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,983.888 266.25,983.888 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,656.772 266.25,656.772 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"247.352,329.656 266.25,329.656 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M115.158 1638.57 L144.834 1638.57 L144.834 1642.51 L115.158 1642.51 L115.158 1638.57 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M155.736 1651.46 L163.375 1651.46 L163.375 1625.1 L155.065 1626.77 L155.065 1622.51 L163.329 1620.84 L168.005 1620.84 L168.005 1651.46 L175.644 1651.46 L175.644 1655.4 L155.736 1655.4 L155.736 1651.46 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M195.088 1623.92 Q191.477 1623.92 189.648 1627.48 Q187.843 1631.02 187.843 1638.15 Q187.843 1645.26 189.648 1648.83 Q191.477 1652.37 195.088 1652.37 Q198.722 1652.37 200.528 1648.83 Q202.357 1645.26 202.357 1638.15 Q202.357 1631.02 200.528 1627.48 Q198.722 1623.92 195.088 1623.92 M195.088 1620.21 Q200.898 1620.21 203.954 1624.82 Q207.032 1629.4 207.032 1638.15 Q207.032 1646.88 203.954 1651.49 Q200.898 1656.07 195.088 1656.07 Q189.278 1656.07 186.199 1651.49 Q183.144 1646.88 183.144 1638.15 Q183.144 1629.4 186.199 1624.82 Q189.278 1620.21 195.088 1620.21 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M195.088 1296.8 Q191.477 1296.8 189.648 1300.37 Q187.843 1303.91 187.843 1311.04 Q187.843 1318.14 189.648 1321.71 Q191.477 1325.25 195.088 1325.25 Q198.722 1325.25 200.528 1321.71 Q202.357 1318.14 202.357 1311.04 Q202.357 1303.91 200.528 1300.37 Q198.722 1296.8 195.088 1296.8 M195.088 1293.1 Q200.898 1293.1 203.954 1297.71 Q207.032 1302.29 207.032 1311.04 Q207.032 1319.77 203.954 1324.37 Q200.898 1328.95 195.088 1328.95 Q189.278 1328.95 186.199 1324.37 Q183.144 1319.77 183.144 1311.04 Q183.144 1302.29 186.199 1297.71 Q189.278 1293.1 195.088 1293.1 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M155.736 997.233 L163.375 997.233 L163.375 970.867 L155.065 972.534 L155.065 968.274 L163.329 966.608 L168.005 966.608 L168.005 997.233 L175.644 997.233 L175.644 1001.17 L155.736 1001.17 L155.736 997.233 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M195.088 969.686 Q191.477 969.686 189.648 973.251 Q187.843 976.793 187.843 983.923 Q187.843 991.029 189.648 994.594 Q191.477 998.135 195.088 998.135 Q198.722 998.135 200.528 994.594 Q202.357 991.029 202.357 983.923 Q202.357 976.793 200.528 973.251 Q198.722 969.686 195.088 969.686 M195.088 965.983 Q200.898 965.983 203.954 970.589 Q207.032 975.173 207.032 983.923 Q207.032 992.649 203.954 997.256 Q200.898 1001.84 195.088 1001.84 Q189.278 1001.84 186.199 997.256 Q183.144 992.649 183.144 983.923 Q183.144 975.173 186.199 970.589 Q189.278 965.983 195.088 965.983 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M158.954 670.117 L175.273 670.117 L175.273 674.052 L153.329 674.052 L153.329 670.117 Q155.991 667.362 160.574 662.733 Q165.181 658.08 166.361 656.737 Q168.607 654.214 169.486 652.478 Q170.389 650.719 170.389 649.029 Q170.389 646.274 168.445 644.538 Q166.523 642.802 163.422 642.802 Q161.223 642.802 158.769 643.566 Q156.338 644.33 153.561 645.881 L153.561 641.159 Q156.385 640.024 158.838 639.446 Q161.292 638.867 163.329 638.867 Q168.699 638.867 171.894 641.552 Q175.088 644.237 175.088 648.728 Q175.088 650.858 174.278 652.779 Q173.491 654.677 171.384 657.27 Q170.806 657.941 167.704 661.159 Q164.602 664.353 158.954 670.117 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M195.088 642.571 Q191.477 642.571 189.648 646.135 Q187.843 649.677 187.843 656.807 Q187.843 663.913 189.648 667.478 Q191.477 671.02 195.088 671.02 Q198.722 671.02 200.528 667.478 Q202.357 663.913 202.357 656.807 Q202.357 649.677 200.528 646.135 Q198.722 642.571 195.088 642.571 M195.088 638.867 Q200.898 638.867 203.954 643.473 Q207.032 648.057 207.032 656.807 Q207.032 665.533 203.954 670.14 Q200.898 674.723 195.088 674.723 Q189.278 674.723 186.199 670.14 Q183.144 665.533 183.144 656.807 Q183.144 648.057 186.199 643.473 Q189.278 638.867 195.088 638.867 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M169.093 328.302 Q172.449 329.02 174.324 331.288 Q176.222 333.557 176.222 336.89 Q176.222 342.006 172.704 344.806 Q169.185 347.607 162.704 347.607 Q160.528 347.607 158.213 347.168 Q155.922 346.751 153.468 345.894 L153.468 341.381 Q155.412 342.515 157.727 343.094 Q160.042 343.672 162.565 343.672 Q166.963 343.672 169.255 341.936 Q171.57 340.2 171.57 336.89 Q171.57 333.834 169.417 332.121 Q167.287 330.385 163.468 330.385 L159.44 330.385 L159.44 326.543 L163.653 326.543 Q167.102 326.543 168.931 325.177 Q170.759 323.788 170.759 321.196 Q170.759 318.533 168.861 317.121 Q166.986 315.686 163.468 315.686 Q161.547 315.686 159.348 316.103 Q157.148 316.52 154.51 317.399 L154.51 313.233 Q157.172 312.492 159.486 312.121 Q161.824 311.751 163.885 311.751 Q169.209 311.751 172.31 314.182 Q175.412 316.589 175.412 320.709 Q175.412 323.58 173.769 325.57 Q172.125 327.538 169.093 328.302 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M195.088 315.455 Q191.477 315.455 189.648 319.02 Q187.843 322.561 187.843 329.691 Q187.843 336.797 189.648 340.362 Q191.477 343.904 195.088 343.904 Q198.722 343.904 200.528 340.362 Q202.357 336.797 202.357 329.691 Q202.357 322.561 200.528 319.02 Q198.722 315.455 195.088 315.455 M195.088 311.751 Q200.898 311.751 203.954 316.358 Q207.032 320.941 207.032 329.691 Q207.032 338.418 203.954 343.024 Q200.898 347.607 195.088 347.607 Q189.278 347.607 186.199 343.024 Q183.144 338.418 183.144 329.691 Q183.144 320.941 186.199 316.358 Q189.278 311.751 195.088 311.751 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M18.3455 1131.35 L36.2013 1131.35 L36.2013 1123.27 Q36.2013 1118.78 33.8778 1116.33 Q31.5543 1113.88 27.2575 1113.88 Q22.9924 1113.88 20.669 1116.33 Q18.3455 1118.78 18.3455 1123.27 L18.3455 1131.35 M13.0619 1137.78 L13.0619 1123.27 Q13.0619 1115.28 16.6904 1111.2 Q20.287 1107.1 27.2575 1107.1 Q34.2916 1107.1 37.8882 1111.2 Q41.4848 1115.28 41.4848 1123.27 L41.4848 1131.35 L60.5819 1131.35 L60.5819 1137.78 L13.0619 1137.78 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M29.0399 1087.24 Q29.0399 1091.95 32.732 1094.69 Q36.3922 1097.42 42.7898 1097.42 Q49.1873 1097.42 52.8794 1094.72 Q56.5397 1091.98 56.5397 1087.24 Q56.5397 1082.56 52.8476 1079.82 Q49.1555 1077.08 42.7898 1077.08 Q36.4559 1077.08 32.7638 1079.82 Q29.0399 1082.56 29.0399 1087.24 M24.0746 1087.24 Q24.0746 1079.6 29.0399 1075.24 Q34.0051 1070.88 42.7898 1070.88 Q51.5426 1070.88 56.5397 1075.24 Q61.505 1079.6 61.505 1087.24 Q61.505 1094.91 56.5397 1099.27 Q51.5426 1103.6 42.7898 1103.6 Q34.0051 1103.6 29.0399 1099.27 Q24.0746 1094.91 24.0746 1087.24 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M24.934 1064.58 L24.934 1058.72 L52.7521 1051.4 L24.934 1044.11 L24.934 1037.2 L52.7521 1029.88 L24.934 1022.59 L24.934 1016.74 L60.5819 1026.06 L60.5819 1032.97 L31.3633 1040.64 L60.5819 1048.34 L60.5819 1055.25 L24.934 1064.58 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M41.2938 977.366 L44.1584 977.366 L44.1584 1004.29 Q50.2058 1003.91 53.3887 1000.66 Q56.5397 997.386 56.5397 991.561 Q56.5397 988.188 55.7122 985.037 Q54.8846 981.854 53.2295 978.734 L58.7677 978.734 Q60.1045 981.886 60.8047 985.196 Q61.505 988.506 61.505 991.911 Q61.505 1000.44 56.5397 1005.44 Q51.5745 1010.4 43.1081 1010.4 Q34.3552 1010.4 29.2308 1005.69 Q24.0746 1000.95 24.0746 992.93 Q24.0746 985.737 28.7216 981.567 Q33.3367 977.366 41.2938 977.366 M39.5751 983.222 Q34.769 983.286 31.9044 985.928 Q29.0399 988.538 29.0399 992.866 Q29.0399 997.768 31.8089 1000.73 Q34.578 1003.66 39.6069 1004.1 L39.5751 983.222 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M30.4085 947.097 Q29.8356 948.084 29.5809 949.261 Q29.2945 950.407 29.2945 951.808 Q29.2945 956.773 32.541 959.446 Q35.7557 962.088 41.8031 962.088 L60.5819 962.088 L60.5819 967.976 L24.934 967.976 L24.934 962.088 L30.4721 962.088 Q27.2256 960.242 25.666 957.282 Q24.0746 954.322 24.0746 950.089 Q24.0746 949.484 24.1701 948.752 Q24.2337 948.02 24.3929 947.129 L30.4085 947.097 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M11.1204 906.165 Q18.441 910.43 25.6024 912.499 Q32.7638 914.568 40.1162 914.568 Q47.4686 914.568 54.6937 912.499 Q61.8869 910.399 69.1756 906.165 L69.1756 911.258 Q61.6959 916.032 54.4709 918.419 Q47.2458 920.775 40.1162 920.775 Q33.0184 920.775 25.8252 918.419 Q18.6319 916.064 11.1204 911.258 L11.1204 906.165 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M30.3448 871.345 L11.0567 871.345 L11.0567 865.489 L60.5819 865.489 L60.5819 871.345 L55.2347 871.345 Q58.4176 873.191 59.9772 876.024 Q61.505 878.825 61.505 882.771 Q61.505 889.233 56.3487 893.307 Q51.1925 897.349 42.7898 897.349 Q34.3871 897.349 29.2308 893.307 Q24.0746 889.233 24.0746 882.771 Q24.0746 878.825 25.6342 876.024 Q27.162 873.191 30.3448 871.345 M42.7898 891.302 Q49.251 891.302 52.9431 888.66 Q56.6034 885.986 56.6034 881.339 Q56.6034 876.692 52.9431 874.019 Q49.251 871.345 42.7898 871.345 Q36.3286 871.345 32.6683 874.019 Q28.9762 876.692 28.9762 881.339 Q28.9762 885.986 32.6683 888.66 Q36.3286 891.302 42.7898 891.302 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M37.8882 846.742 L55.2984 846.742 L55.2984 836.429 Q55.2984 831.241 53.1659 828.758 Q51.0015 826.244 46.5774 826.244 Q42.1214 826.244 40.0207 828.758 Q37.8882 831.241 37.8882 836.429 L37.8882 846.742 M18.3455 846.742 L32.6683 846.742 L32.6683 837.225 Q32.6683 832.514 30.9177 830.223 Q29.1353 827.899 25.5069 827.899 Q21.9103 827.899 20.1279 830.223 Q18.3455 832.514 18.3455 837.225 L18.3455 846.742 M13.0619 853.171 L13.0619 836.747 Q13.0619 829.395 16.1175 825.416 Q19.173 821.438 24.8067 821.438 Q29.1672 821.438 31.7453 823.475 Q34.3234 825.512 34.96 829.459 Q35.9785 824.716 39.225 822.106 Q42.4397 819.465 47.2776 819.465 Q53.6433 819.465 57.1126 823.793 Q60.5819 828.122 60.5819 836.111 L60.5819 853.171 L13.0619 853.171 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M31.7771 780.952 Q27.8304 778.756 25.9525 775.7 Q24.0746 772.645 24.0746 768.507 Q24.0746 762.937 27.9895 759.913 Q31.8726 756.89 39.0658 756.89 L60.5819 756.89 L60.5819 762.778 L39.2568 762.778 Q34.1324 762.778 31.6498 764.592 Q29.1672 766.406 29.1672 770.13 Q29.1672 774.682 32.1909 777.324 Q35.2146 779.965 40.4345 779.965 L60.5819 779.965 L60.5819 785.854 L39.2568 785.854 Q34.1006 785.854 31.6498 787.668 Q29.1672 789.482 29.1672 793.27 Q29.1672 797.757 32.2227 800.399 Q35.2464 803.041 40.4345 803.041 L60.5819 803.041 L60.5819 808.929 L24.934 808.929 L24.934 803.041 L30.4721 803.041 Q27.1938 801.036 25.6342 798.235 Q24.0746 795.434 24.0746 791.583 Q24.0746 787.7 26.048 784.994 Q28.0213 782.257 31.7771 780.952 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M11.1204 746.132 L11.1204 741.039 Q18.6319 736.265 25.8252 733.909 Q33.0184 731.522 40.1162 731.522 Q47.2458 731.522 54.4709 733.909 Q61.6959 736.265 69.1756 741.039 L69.1756 746.132 Q61.8869 741.898 54.6937 739.83 Q47.4686 737.729 40.1162 737.729 Q32.7638 737.729 25.6024 739.83 Q18.441 741.898 11.1204 746.132 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip302)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"311.079,231.184 313.203,231.561 315.327,231.937 317.452,232.314 319.576,232.69 321.7,233.067 323.824,233.444 325.949,233.82 328.073,234.197 330.197,234.573 332.321,234.95 334.445,235.327 336.57,235.703 338.694,236.08 340.818,236.457 342.942,236.833 345.066,237.21 347.191,237.587 349.315,237.964 351.439,238.34 353.563,238.717 355.688,239.094 357.812,239.471 359.936,239.848 362.06,240.225 364.184,240.601 366.309,240.978 368.433,241.355 370.557,241.732 372.681,242.109 374.806,242.487 376.93,242.864 379.054,243.241 381.178,243.618 383.302,243.995 385.427,244.372 387.551,244.75 389.675,245.127 391.799,245.504 393.923,245.882 396.048,246.259 398.172,246.637 400.296,247.014 402.42,247.392 404.545,247.769 406.669,248.147 408.793,248.525 410.917,248.902 413.041,249.28 415.166,249.658 417.29,250.036 419.414,250.414 421.538,250.792 423.663,251.17 425.787,251.548 427.911,251.927 430.035,252.305 432.159,252.683 434.284,253.062 436.408,253.44 438.532,253.819 440.656,254.197 442.781,254.576 444.905,254.955 447.029,255.334 449.153,255.713 451.277,256.092 453.402,256.471 455.526,256.851 457.65,257.23 459.774,257.609 461.898,257.989 464.023,258.369 466.147,258.749 468.271,259.128 470.395,259.509 472.52,259.889 474.644,260.269 476.768,260.649 478.892,261.03 481.016,261.411 483.141,261.791 485.265,262.172 487.389,262.553 489.513,262.935 491.638,263.316 493.762,263.698 495.886,264.079 498.01,264.461 500.134,264.843 502.259,265.225 504.383,265.608 506.507,265.99 508.631,266.373 510.755,266.756 512.88,267.139 515.004,267.523 517.128,267.906 519.252,268.29 521.377,268.674 523.501,269.058 525.625,269.443 527.749,269.828 529.873,270.213 531.998,270.598 534.122,270.983 536.246,271.369 538.37,271.755 540.495,272.141 542.619,272.528 544.743,272.915 546.867,273.302 548.991,273.689 551.116,274.077 553.24,274.465 555.364,274.854 557.488,275.243 559.613,275.632 561.737,276.021 563.861,276.411 565.985,276.801 568.109,277.192 570.234,277.583 572.358,277.974 574.482,278.366 576.606,278.758 578.73,279.151 580.855,279.544 582.979,279.937 585.103,280.331 587.227,280.726 589.352,281.121 591.476,281.516 593.6,281.912 595.724,282.309 597.848,282.706 599.973,283.103 602.097,283.501 604.221,283.9 606.345,284.299 608.47,284.699 610.594,285.1 612.718,285.501 614.842,285.902 616.966,286.305 619.091,286.708 621.215,287.111 623.339,287.516 625.463,287.921 627.587,288.326 629.712,288.733 631.836,289.14 633.96,289.548 636.084,289.957 638.209,290.367 640.333,290.777 642.457,291.188 644.581,291.6 646.705,292.013 648.83,292.427 650.954,292.842 653.078,293.258 655.202,293.675 657.327,294.092 659.451,294.511 661.575,294.93 663.699,295.351 665.823,295.773 667.948,296.196 670.072,296.619 672.196,297.044 674.32,297.471 676.444,297.898 678.569,298.326 680.693,298.756 682.817,299.187 684.941,299.619 687.066,300.052 689.19,300.487 691.314,300.923 693.438,301.36 695.562,301.799 697.687,302.239 699.811,302.681 701.935,303.124 704.059,303.568 706.184,304.014 708.308,304.462 710.432,304.911 712.556,305.362 714.68,305.814 716.805,306.268 718.929,306.723 721.053,307.181 723.177,307.64 725.302,308.101 727.426,308.564 729.55,309.028 731.674,309.495 733.798,309.963 735.923,310.433 738.047,310.905 740.171,311.38 742.295,311.856 744.419,312.334 746.544,312.815 748.668,313.297 750.792,313.782 752.916,314.269 755.041,314.758 757.165,315.249 759.289,315.743 761.413,316.239 763.537,316.738 765.662,317.239 767.786,317.742 769.91,318.248 772.034,318.757 774.159,319.268 776.283,319.782 778.407,320.298 780.531,320.817 782.655,321.339 784.78,321.864 786.904,322.392 789.028,322.922 791.152,323.455 793.276,323.992 795.401,324.531 797.525,325.073 799.649,325.619 801.773,326.168 803.898,326.719 806.022,327.275 808.146,327.833 810.27,328.395 812.394,328.96 814.519,329.528 816.643,330.1 818.767,330.675 820.891,331.254 823.016,331.837 825.14,332.423 827.264,333.013 829.388,333.607 831.512,334.204 833.637,334.805 835.761,335.411 837.885,336.02 840.009,336.633 842.134,337.25 844.258,337.871 846.382,338.496 848.506,339.126 850.63,339.759 852.755,340.397 854.879,341.039 857.003,341.686 859.127,342.337 861.251,342.992 863.376,343.652 865.5,344.317 867.624,344.986 869.748,345.66 871.873,346.338 873.997,347.022 876.121,347.71 878.245,348.403 880.369,349.1 882.494,349.803 884.618,350.511 886.742,351.224 888.866,351.942 890.991,352.665 893.115,353.393 895.239,354.126 897.363,354.865 899.487,355.609 901.612,356.358 903.736,357.113 905.86,357.873 907.984,358.639 910.108,359.41 912.233,360.187 914.357,360.969 916.481,361.758 918.605,362.551 920.73,363.351 922.854,364.156 924.978,364.968 927.102,365.785 929.226,366.608 931.351,367.437 933.475,368.272 935.599,369.113 937.723,369.96 939.848,370.813 941.972,371.672 944.096,372.537 946.22,373.409 948.344,374.287 950.469,375.171 952.593,376.062 954.717,376.959 956.841,377.862 958.966,378.772 961.09,379.688 963.214,380.611 965.338,381.54 967.462,382.475 969.587,383.417 971.711,384.366 973.835,385.321 975.959,386.283 978.083,387.251 980.208,388.226 982.332,389.207 984.456,390.196 986.58,391.19 988.705,392.192 990.829,393.2 992.953,394.215 995.077,395.237 997.201,396.265 999.326,397.3 1001.45,398.342 1003.57,399.391 1005.7,400.447 1007.82,401.509 1009.95,402.578 1012.07,403.654 1014.2,404.737 1016.32,405.827 1018.44,406.923 1020.57,408.026 1022.69,409.136 1024.82,410.253 1026.94,411.377 1029.06,412.508 1031.19,413.645 1033.31,414.79 1035.44,415.941 1037.56,417.099 1039.69,418.263 1041.81,419.435 1043.93,420.613 1046.06,421.798 1048.18,422.99 1050.31,424.188 1052.43,425.393 1054.56,426.605 1056.68,427.823 1058.8,429.048 1060.93,430.28 1063.05,431.518 1065.18,432.762 1067.3,434.013 1069.42,435.271 1071.55,436.535 1073.67,437.805 1075.8,439.082 1077.92,440.366 1080.05,441.655 1082.17,442.951 1084.29,444.253 1086.42,445.562 1088.54,446.877 1090.67,448.197 1092.79,449.524 1094.92,450.857 1097.04,452.197 1099.16,453.542 1101.29,454.893 1103.41,456.25 1105.54,457.613 1107.66,458.982 1109.78,460.357 1111.91,461.738 1114.03,463.124 1116.16,464.516 1118.28,465.914 1120.41,467.317 1122.53,468.726 1124.65,470.141 1126.78,471.561 1128.9,472.986 1131.03,474.417 1133.15,475.853 1135.28,477.295 1137.4,478.742 1139.52,480.194 1141.65,481.651 1143.77,483.113 1145.9,484.58 1148.02,486.052 1150.15,487.53 1152.27,489.012 1154.39,490.499 1156.52,491.99 1158.64,493.487 1160.77,494.988 1162.89,496.493 1165.01,498.004 1167.14,499.518 1169.26,501.037 1171.39,502.561 1173.51,504.088 1175.64,505.62 1177.76,507.157 1179.88,508.697 1182.01,510.241 1184.13,511.79 1186.26,513.342 1188.38,514.898 1190.51,516.458 1192.63,518.021 1194.75,519.589 1196.88,521.16 1199,522.734 1201.13,524.312 1203.25,525.894 1205.37,527.478 1207.5,529.067 1209.62,530.658 1211.75,532.253 1213.87,533.85 1216,535.451 1218.12,537.055 1220.24,538.662 1222.37,540.271 1224.49,541.884 1226.62,543.499 1228.74,545.117 1230.87,546.738 1232.99,548.362 1235.11,549.988 1237.24,551.617 1239.36,553.249 1241.49,554.883 1243.61,556.519 1245.73,558.158 1247.86,559.799 1249.98,561.443 1252.11,563.088 1254.23,564.736 1256.36,566.385 1258.48,568.037 1260.6,569.691 1262.73,571.347 1264.85,573.005 1266.98,574.664 1269.1,576.325 1271.23,577.989 1273.35,579.653 1275.47,581.32 1277.6,582.988 1279.72,584.658 1281.85,586.329 1283.97,588.002 1286.1,589.676 1288.22,591.351 1290.34,593.028 1292.47,594.706 1294.59,596.386 1296.72,598.066 1298.84,599.748 1300.96,601.431 1303.09,603.114 1305.21,604.799 1307.34,606.485 1309.46,608.171 1311.59,609.858 1313.71,611.546 1315.83,613.235 1317.96,614.924 1320.08,616.614 1322.21,618.305 1324.33,619.996 1326.46,621.687 1328.58,623.379 1330.7,625.071 1332.83,626.764 1334.95,628.457 1337.08,630.15 1339.2,631.843 1341.32,633.536 1343.45,635.23 1345.57,636.924 1347.7,638.617 1349.82,640.311 1351.95,642.005 1354.07,643.698 1356.19,645.392 1358.32,647.086 1360.44,648.779 1362.57,650.472 1364.69,652.166 1366.82,653.859 1368.94,655.552 1371.06,657.244 1373.19,658.937 1375.31,660.63 1377.44,662.322 1379.56,664.014 1381.68,665.706 1383.81,667.398 1385.93,669.089 1388.06,670.781 1390.18,672.471 1392.31,674.162 1394.43,675.852 1396.55,677.541 1398.68,679.23 1400.8,680.918 1402.93,682.606 1405.05,684.293 1407.18,685.98 1409.3,687.665 1411.42,689.351 1413.55,691.035 1415.67,692.719 1417.8,694.401 1419.92,696.083 1422.05,697.764 1424.17,699.444 1426.29,701.124 1428.42,702.802 1430.54,704.479 1432.67,706.155 1434.79,707.831 1436.91,709.505 1439.04,711.178 1441.16,712.85 1443.29,714.52 1445.41,716.19 1447.54,717.858 1449.66,719.525 1451.78,721.191 1453.91,722.856 1456.03,724.519 1458.16,726.181 1460.28,727.841 1462.41,729.501 1464.53,731.158 1466.65,732.815 1468.78,734.47 1470.9,736.124 1473.03,737.776 1475.15,739.427 1477.27,741.076 1479.4,742.724 1481.52,744.37 1483.65,746.015 1485.77,747.658 1487.9,749.3 1490.02,750.94 1492.14,752.579 1494.27,754.216 1496.39,755.852 1498.52,757.486 1500.64,759.119 1502.77,760.75 1504.89,762.379 1507.01,764.007 1509.14,765.634 1511.26,767.259 1513.39,768.882 1515.51,770.504 1517.63,772.125 1519.76,773.743 1521.88,775.361 1524.01,776.977 1526.13,778.592 1528.26,780.205 1530.38,781.816 1532.5,783.426 1534.63,785.035 1536.75,786.642 1538.88,788.247 1541,789.851 1543.13,791.453 1545.25,793.053 1547.37,794.651 1549.5,796.248 1551.62,797.843 1553.75,799.437 1555.87,801.028 1558,802.618 1560.12,804.206 1562.24,805.793 1564.37,807.377 1566.49,808.96 1568.62,810.54 1570.74,812.119 1572.86,813.696 1574.99,815.271 1577.11,816.845 1579.24,818.416 1581.36,819.985 1583.49,821.553 1585.61,823.119 1587.73,824.682 1589.86,826.244 1591.98,827.804 1594.11,829.362 1596.23,830.918 1598.36,832.472 1600.48,834.024 1602.6,835.574 1604.73,837.122 1606.85,838.668 1608.98,840.213 1611.1,841.755 1613.22,843.295 1615.35,844.834 1617.47,846.37 1619.6,847.905 1621.72,849.437 1623.85,850.968 1625.97,852.497 1628.09,854.023 1630.22,855.548 1632.34,857.071 1634.47,858.592 1636.59,860.111 1638.72,861.628 1640.84,863.143 1642.96,864.656 1645.09,866.168 1647.21,867.677 1649.34,869.184 1651.46,870.69 1653.58,872.193 1655.71,873.695 1657.83,875.195 1659.96,876.693 1662.08,878.188 1664.21,879.682 1666.33,881.174 1668.45,882.664 1670.58,884.152 1672.7,885.639 1674.83,887.123 1676.95,888.606 1679.08,890.086 1681.2,891.565 1683.32,893.042 1685.45,894.517 1687.57,895.99 1689.7,897.461 1691.82,898.93 1693.94,900.397 1696.07,901.862 1698.19,903.325 1700.32,904.786 1702.44,906.245 1704.57,907.702 1706.69,909.157 1708.81,910.61 1710.94,912.061 1713.06,913.509 1715.19,914.956 1717.31,916.401 1719.44,917.844 1721.56,919.284 1723.68,920.723 1725.81,922.16 1727.93,923.594 1730.06,925.027 1732.18,926.457 1734.31,927.885 1736.43,929.312 1738.55,930.736 1740.68,932.158 1742.8,933.578 1744.93,934.996 1747.05,936.412 1749.17,937.826 1751.3,939.238 1753.42,940.648 1755.55,942.056 1757.67,943.462 1759.8,944.866 1761.92,946.268 1764.04,947.668 1766.17,949.066 1768.29,950.462 1770.42,951.856 1772.54,953.248 1774.67,954.638 1776.79,956.026 1778.91,957.412 1781.04,958.797 1783.16,960.179 1785.29,961.559 1787.41,962.938 1789.53,964.314 1791.66,965.689 1793.78,967.061 1795.91,968.432 1798.03,969.801 1800.16,971.168 1802.28,972.533 1804.4,973.896 1806.53,975.257 1808.65,976.617 1810.78,977.974 1812.9,979.33 1815.03,980.683 1817.15,982.035 1819.27,983.385 1821.4,984.733 1823.52,986.079 1825.65,987.423 1827.77,988.765 1829.89,990.105 1832.02,991.444 1834.14,992.78 1836.27,994.115 1838.39,995.448 1840.52,996.779 1842.64,998.108 1844.76,999.436 1846.89,1000.76 1849.01,1002.08 1851.14,1003.41 1853.26,1004.73 1855.39,1006.04 1857.51,1007.36 1859.63,1008.67 1861.76,1009.99 1863.88,1011.3 1866.01,1012.6 1868.13,1013.91 1870.26,1015.21 1872.38,1016.52 1874.5,1017.82 1876.63,1019.12 1878.75,1020.41 1880.88,1021.71 1883,1023 1885.12,1024.29 1887.25,1025.58 1889.37,1026.87 1891.5,1028.15 1893.62,1029.44 1895.75,1030.72 1897.87,1032 1899.99,1033.27 1902.12,1034.55 1904.24,1035.82 1906.37,1037.1 1908.49,1038.37 1910.62,1039.63 1912.74,1040.9 1914.86,1042.17 1916.99,1043.43 1919.11,1044.69 1921.24,1045.95 1923.36,1047.2 1925.48,1048.46 1927.61,1049.71 1929.73,1050.97 1931.86,1052.22 1933.98,1053.46 1936.11,1054.71 1938.23,1055.95 1940.35,1057.2 1942.48,1058.44 1944.6,1059.68 1946.73,1060.92 1948.85,1062.15 1950.98,1063.39 1953.1,1064.62 1955.22,1065.85 1957.35,1067.08 1959.47,1068.3 1961.6,1069.53 1963.72,1070.75 1965.84,1071.98 1967.97,1073.2 1970.09,1074.41 1972.22,1075.63 1974.34,1076.85 1976.47,1078.06 1978.59,1079.27 1980.71,1080.48 1982.84,1081.69 1984.96,1082.9 1987.09,1084.1 1989.21,1085.3 1991.34,1086.5 1993.46,1087.7 1995.58,1088.9 1997.71,1090.1 1999.83,1091.29 2001.96,1092.49 2004.08,1093.68 2006.21,1094.87 2008.33,1096.06 2010.45,1097.24 2012.58,1098.43 2014.7,1099.61 2016.83,1100.79 2018.95,1101.97 2021.07,1103.15 2023.2,1104.32 2025.32,1105.5 2027.45,1106.67 2029.57,1107.84 2031.7,1109.01 2033.82,1110.18 2035.94,1111.34 2038.07,1112.51 2040.19,1113.67 2042.32,1114.83 2044.44,1115.99 2046.57,1117.15 2048.69,1118.3 2050.81,1119.46 2052.94,1120.61 2055.06,1121.76 2057.19,1122.91 2059.31,1124.06 2061.43,1125.2 2063.56,1126.35 2065.68,1127.49 2067.81,1128.63 2069.93,1129.77 2072.06,1130.91 2074.18,1132.04 2076.3,1133.18 2078.43,1134.31 2080.55,1135.44 2082.68,1136.57 2084.8,1137.7 2086.93,1138.82 2089.05,1139.95 2091.17,1141.07 2093.3,1142.19 2095.42,1143.31 2097.55,1144.43 2099.67,1145.55 2101.79,1146.66 2103.92,1147.77 2106.04,1148.89 2108.17,1150 2110.29,1151.11 2112.42,1152.21 2114.54,1153.32 2116.66,1154.42 2118.79,1155.53 2120.91,1156.63 2123.04,1157.73 2125.16,1158.82 2127.29,1159.92 2129.41,1161.02 2131.53,1162.11 2133.66,1163.2 2135.78,1164.29 2137.91,1165.38 2140.03,1166.47 2142.15,1167.55 2144.28,1168.64 2146.4,1169.72 2148.53,1170.8 2150.65,1171.88 2152.78,1172.96 2154.9,1174.04 2157.02,1175.12 2159.15,1176.19 2161.27,1177.26 2163.4,1178.34 2165.52,1179.4 2167.65,1180.47 2169.77,1181.54 2171.89,1182.61 2174.02,1183.67 2176.14,1184.73 2178.27,1185.79 2180.39,1186.85 2182.52,1187.91 2184.64,1188.97 2186.76,1190.02 2188.89,1191.08 2191.01,1192.13 2193.14,1193.18 2195.26,1194.23 2197.38,1195.28 2199.51,1196.33 2201.63,1197.37 2203.76,1198.41 2205.88,1199.46 2208.01,1200.5 2210.13,1201.54 2212.25,1202.58 2214.38,1203.61 2216.5,1204.65 2218.63,1205.68 2220.75,1206.71 2222.88,1207.75 2225,1208.78 2227.12,1209.8 2229.25,1210.83 2231.37,1211.86 2233.5,1212.88 2235.62,1213.9 2237.74,1214.92 2239.87,1215.94 2241.99,1216.96 2244.12,1217.98 2246.24,1218.99 2248.37,1220.01 2250.49,1221.02 2252.61,1222.03 2254.74,1223.04 2256.86,1224.05 2258.99,1225.06 2261.11,1226.06 2263.24,1227.07 2265.36,1228.07 2267.48,1229.07 2269.61,1230.07 2271.73,1231.07 2273.86,1232.07 2275.98,1233.06 2278.1,1234.06 2280.23,1235.05 2282.35,1236.04 2284.48,1237.03 2286.6,1238.02 2288.73,1239.01 2290.85,1240 2292.97,1240.98 2295.1,1241.97 2297.22,1242.95 2299.35,1243.93 2301.47,1244.91 2303.6,1245.89 2305.72,1246.87 2307.84,1247.84 2309.97,1248.82 2312.09,1249.79 2314.22,1250.77 2316.34,1251.74 2318.47,1252.71 2320.59,1253.68 2322.71,1254.64 2324.84,1255.61 2326.96,1256.57 2329.09,1257.54 2331.21,1258.5 2333.33,1259.46 2335.46,1260.42 2337.58,1261.38 2339.71,1262.34 2341.83,1263.3 2343.96,1264.25 2346.08,1265.2 2348.2,1266.16 2350.33,1267.11 2352.45,1268.06 2354.58,1269.01 2356.7,1269.96 2358.83,1270.9 2360.95,1271.85 2363.07,1272.79 2365.2,1273.73 2367.32,1274.68 2369.45,1275.62 2371.57,1276.56 2373.69,1277.49 2375.82,1278.43 2377.94,1279.37 2380.07,1280.3 2382.19,1281.23 2384.32,1282.17 2386.44,1283.1 2388.56,1284.03 2390.69,1284.95 2392.81,1285.88 2394.94,1286.81 2397.06,1287.73 2399.19,1288.65 2401.31,1289.58 2403.43,1290.5 2405.56,1291.42 2407.68,1292.34 2409.81,1293.25 2411.93,1294.17 2414.05,1295.09 2416.18,1296 2418.3,1296.91 2420.43,1297.83 2422.55,1298.74 2424.68,1299.65 2426.8,1300.55 2428.92,1301.46 2431.05,1302.37 2433.17,1303.27 2435.3,1304.18 \"/>\n<polyline clip-path=\"url(#clip302)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:8; stroke-opacity:1; fill:none\" points=\"311.079,1638.12 313.203,1632.76 315.327,1627.41 317.452,1622.07 319.576,1616.75 321.7,1611.45 323.824,1606.16 325.949,1600.88 328.073,1595.62 330.197,1590.38 332.321,1585.15 334.445,1579.93 336.57,1574.73 338.694,1569.54 340.818,1564.37 342.942,1559.21 345.066,1554.07 347.191,1548.94 349.315,1543.83 351.439,1538.73 353.563,1533.64 355.688,1528.57 357.812,1523.52 359.936,1518.47 362.06,1513.44 364.184,1508.43 366.309,1503.43 368.433,1498.44 370.557,1493.47 372.681,1488.51 374.806,1483.57 376.93,1478.64 379.054,1473.72 381.178,1468.82 383.302,1463.93 385.427,1459.06 387.551,1454.2 389.675,1449.35 391.799,1444.51 393.923,1439.69 396.048,1434.89 398.172,1430.09 400.296,1425.31 402.42,1420.55 404.545,1415.8 406.669,1411.06 408.793,1406.33 410.917,1401.62 413.041,1396.92 415.166,1392.24 417.29,1387.56 419.414,1382.9 421.538,1378.26 423.663,1373.63 425.787,1369.01 427.911,1364.4 430.035,1359.81 432.159,1355.23 434.284,1350.66 436.408,1346.11 438.532,1341.56 440.656,1337.04 442.781,1332.52 444.905,1328.02 447.029,1323.53 449.153,1319.05 451.277,1314.59 453.402,1310.13 455.526,1305.69 457.65,1301.27 459.774,1296.86 461.898,1292.45 464.023,1288.07 466.147,1283.69 468.271,1279.33 470.395,1274.98 472.52,1270.64 474.644,1266.31 476.768,1262 478.892,1257.7 481.016,1253.41 483.141,1249.13 485.265,1244.87 487.389,1240.62 489.513,1236.38 491.638,1232.15 493.762,1227.93 495.886,1223.73 498.01,1219.54 500.134,1215.36 502.259,1211.19 504.383,1207.04 506.507,1202.89 508.631,1198.76 510.755,1194.64 512.88,1190.54 515.004,1186.44 517.128,1182.36 519.252,1178.29 521.377,1174.23 523.501,1170.18 525.625,1166.15 527.749,1162.12 529.873,1158.11 531.998,1154.11 534.122,1150.12 536.246,1146.14 538.37,1142.18 540.495,1138.22 542.619,1134.28 544.743,1130.35 546.867,1126.43 548.991,1122.52 551.116,1118.62 553.24,1114.74 555.364,1110.86 557.488,1107 559.613,1103.15 561.737,1099.31 563.861,1095.48 565.985,1091.67 568.109,1087.86 570.234,1084.07 572.358,1080.28 574.482,1076.51 576.606,1072.75 578.73,1069.01 580.855,1065.27 582.979,1061.54 585.103,1057.83 587.227,1054.12 589.352,1050.43 591.476,1046.75 593.6,1043.07 595.724,1039.41 597.848,1035.77 599.973,1032.13 602.097,1028.5 604.221,1024.88 606.345,1021.28 608.47,1017.68 610.594,1014.1 612.718,1010.53 614.842,1006.97 616.966,1003.42 619.091,999.88 621.215,996.352 623.339,992.836 625.463,989.33 627.587,985.835 629.712,982.351 631.836,978.878 633.96,975.416 636.084,971.965 638.209,968.524 640.333,965.094 642.457,961.675 644.581,958.266 646.705,954.868 648.83,951.481 650.954,948.105 653.078,944.739 655.202,941.384 657.327,938.04 659.451,934.706 661.575,931.383 663.699,928.071 665.823,924.769 667.948,921.478 670.072,918.198 672.196,914.929 674.32,911.67 676.444,908.422 678.569,905.185 680.693,901.959 682.817,898.743 684.941,895.538 687.066,892.344 689.19,889.161 691.314,885.989 693.438,882.827 695.562,879.676 697.687,876.536 699.811,873.407 701.935,870.288 704.059,867.18 706.184,864.083 708.308,860.996 710.432,857.92 712.556,854.854 714.68,851.799 716.805,848.755 718.929,845.721 721.053,842.698 723.177,839.685 725.302,836.684 727.426,833.693 729.55,830.713 731.674,827.743 733.798,824.784 735.923,821.836 738.047,818.899 740.171,815.973 742.295,813.057 744.419,810.153 746.544,807.259 748.668,804.376 750.792,801.504 752.916,798.643 755.041,795.793 757.165,792.953 759.289,790.125 761.413,787.308 763.537,784.501 765.662,781.706 767.786,778.922 769.91,776.149 772.034,773.387 774.159,770.636 776.283,767.896 778.407,765.167 780.531,762.449 782.655,759.742 784.78,757.046 786.904,754.361 789.028,751.687 791.152,749.024 793.276,746.372 795.401,743.732 797.525,741.102 799.649,738.484 801.773,735.877 803.898,733.281 806.022,730.696 808.146,728.123 810.27,725.561 812.394,723.011 814.519,720.472 816.643,717.944 818.767,715.428 820.891,712.923 823.016,710.43 825.14,707.948 827.264,705.478 829.388,703.019 831.512,700.572 833.637,698.137 835.761,695.714 837.885,693.302 840.009,690.902 842.134,688.513 844.258,686.136 846.382,683.771 848.506,681.418 850.63,679.077 852.755,676.747 854.879,674.43 857.003,672.124 859.127,669.831 861.251,667.549 863.376,665.279 865.5,663.021 867.624,660.775 869.748,658.541 871.873,656.32 873.997,654.11 876.121,651.912 878.245,649.727 880.369,647.554 882.494,645.393 884.618,643.244 886.742,641.107 888.866,638.983 890.991,636.871 893.115,634.771 895.239,632.684 897.363,630.609 899.487,628.547 901.612,626.497 903.736,624.459 905.86,622.434 907.984,620.422 910.108,618.422 912.233,616.434 914.357,614.459 916.481,612.497 918.605,610.548 920.73,608.611 922.854,606.686 924.978,604.775 927.102,602.876 929.226,600.99 931.351,599.116 933.475,597.256 935.599,595.408 937.723,593.573 939.848,591.75 941.972,589.941 944.096,588.144 946.22,586.36 948.344,584.589 950.469,582.831 952.593,581.085 954.717,579.352 956.841,577.632 958.966,575.925 961.09,574.231 963.214,572.55 965.338,570.881 967.462,569.226 969.587,567.584 971.711,565.955 973.835,564.339 975.959,562.735 978.083,561.145 980.208,559.568 982.332,558.004 984.456,556.453 986.58,554.915 988.705,553.39 990.829,551.878 992.953,550.379 995.077,548.893 997.201,547.42 999.326,545.96 1001.45,544.513 1003.57,543.079 1005.7,541.657 1007.82,540.249 1009.95,538.853 1012.07,537.47 1014.2,536.1 1016.32,534.742 1018.44,533.398 1020.57,532.066 1022.69,530.747 1024.82,529.44 1026.94,528.146 1029.06,526.865 1031.19,525.596 1033.31,524.34 1035.44,523.097 1037.56,521.866 1039.69,520.647 1041.81,519.441 1043.93,518.248 1046.06,517.067 1048.18,515.898 1050.31,514.742 1052.43,513.598 1054.56,512.466 1056.68,511.347 1058.8,510.24 1060.93,509.145 1063.05,508.063 1065.18,506.993 1067.3,505.934 1069.42,504.888 1071.55,503.854 1073.67,502.832 1075.8,501.821 1077.92,500.823 1080.05,499.836 1082.17,498.861 1084.29,497.898 1086.42,496.947 1088.54,496.007 1090.67,495.079 1092.79,494.162 1094.92,493.257 1097.04,492.363 1099.16,491.48 1101.29,490.609 1103.41,489.749 1105.54,488.9 1107.66,488.062 1109.78,487.235 1111.91,486.419 1114.03,485.614 1116.16,484.82 1118.28,484.037 1120.41,483.264 1122.53,482.502 1124.65,481.751 1126.78,481.01 1128.9,480.28 1131.03,479.56 1133.15,478.85 1135.28,478.151 1137.4,477.461 1139.52,476.782 1141.65,476.113 1143.77,475.454 1145.9,474.805 1148.02,474.166 1150.15,473.536 1152.27,472.916 1154.39,472.306 1156.52,471.706 1158.64,471.115 1160.77,470.533 1162.89,469.961 1165.01,469.398 1167.14,468.844 1169.26,468.3 1171.39,467.764 1173.51,467.238 1175.64,466.72 1177.76,466.212 1179.88,465.712 1182.01,465.221 1184.13,464.739 1186.26,464.265 1188.38,463.8 1190.51,463.344 1192.63,462.896 1194.75,462.456 1196.88,462.024 1199,461.601 1201.13,461.186 1203.25,460.778 1205.37,460.379 1207.5,459.988 1209.62,459.605 1211.75,459.229 1213.87,458.861 1216,458.501 1218.12,458.148 1220.24,457.802 1222.37,457.465 1224.49,457.134 1226.62,456.811 1228.74,456.495 1230.87,456.185 1232.99,455.883 1235.11,455.588 1237.24,455.3 1239.36,455.019 1241.49,454.744 1243.61,454.476 1245.73,454.215 1247.86,453.96 1249.98,453.712 1252.11,453.47 1254.23,453.235 1256.36,453.005 1258.48,452.783 1260.6,452.566 1262.73,452.355 1264.85,452.151 1266.98,451.952 1269.1,451.759 1271.23,451.572 1273.35,451.391 1275.47,451.216 1277.6,451.046 1279.72,450.882 1281.85,450.723 1283.97,450.57 1286.1,450.422 1288.22,450.279 1290.34,450.142 1292.47,450.01 1294.59,449.884 1296.72,449.762 1298.84,449.646 1300.96,449.534 1303.09,449.428 1305.21,449.326 1307.34,449.23 1309.46,449.138 1311.59,449.051 1313.71,448.968 1315.83,448.89 1317.96,448.817 1320.08,448.749 1322.21,448.684 1324.33,448.625 1326.46,448.569 1328.58,448.519 1330.7,448.472 1332.83,448.43 1334.95,448.391 1337.08,448.357 1339.2,448.328 1341.32,448.302 1343.45,448.28 1345.57,448.262 1347.7,448.248 1349.82,448.238 1351.95,448.232 1354.07,448.229 1356.19,448.231 1358.32,448.236 1360.44,448.244 1362.57,448.256 1364.69,448.272 1366.82,448.291 1368.94,448.314 1371.06,448.34 1373.19,448.369 1375.31,448.402 1377.44,448.438 1379.56,448.477 1381.68,448.52 1383.81,448.565 1385.93,448.614 1388.06,448.665 1390.18,448.72 1392.31,448.778 1394.43,448.838 1396.55,448.902 1398.68,448.969 1400.8,449.038 1402.93,449.11 1405.05,449.185 1407.18,449.263 1409.3,449.344 1411.42,449.427 1413.55,449.513 1415.67,449.602 1417.8,449.693 1419.92,449.787 1422.05,449.883 1424.17,449.982 1426.29,450.083 1428.42,450.187 1430.54,450.293 1432.67,450.402 1434.79,450.513 1436.91,450.627 1439.04,450.742 1441.16,450.86 1443.29,450.981 1445.41,451.103 1447.54,451.228 1449.66,451.355 1451.78,451.484 1453.91,451.615 1456.03,451.748 1458.16,451.884 1460.28,452.021 1462.41,452.16 1464.53,452.302 1466.65,452.445 1468.78,452.591 1470.9,452.738 1473.03,452.887 1475.15,453.038 1477.27,453.191 1479.4,453.346 1481.52,453.503 1483.65,453.661 1485.77,453.821 1487.9,453.983 1490.02,454.147 1492.14,454.312 1494.27,454.479 1496.39,454.648 1498.52,454.818 1500.64,454.99 1502.77,455.163 1504.89,455.338 1507.01,455.515 1509.14,455.693 1511.26,455.872 1513.39,456.053 1515.51,456.236 1517.63,456.42 1519.76,456.605 1521.88,456.792 1524.01,456.98 1526.13,457.17 1528.26,457.361 1530.38,457.553 1532.5,457.747 1534.63,457.942 1536.75,458.138 1538.88,458.335 1541,458.534 1543.13,458.734 1545.25,458.935 1547.37,459.138 1549.5,459.341 1551.62,459.546 1553.75,459.752 1555.87,459.959 1558,460.168 1560.12,460.377 1562.24,460.588 1564.37,460.799 1566.49,461.012 1568.62,461.226 1570.74,461.441 1572.86,461.657 1574.99,461.874 1577.11,462.092 1579.24,462.312 1581.36,462.532 1583.49,462.753 1585.61,462.975 1587.73,463.198 1589.86,463.422 1591.98,463.647 1594.11,463.873 1596.23,464.1 1598.36,464.328 1600.48,464.557 1602.6,464.786 1604.73,465.017 1606.85,465.248 1608.98,465.481 1611.1,465.714 1613.22,465.948 1615.35,466.182 1617.47,466.418 1619.6,466.654 1621.72,466.892 1623.85,467.13 1625.97,467.368 1628.09,467.608 1630.22,467.848 1632.34,468.089 1634.47,468.331 1636.59,468.573 1638.72,468.817 1640.84,469.061 1642.96,469.305 1645.09,469.551 1647.21,469.797 1649.34,470.043 1651.46,470.291 1653.58,470.539 1655.71,470.788 1657.83,471.037 1659.96,471.287 1662.08,471.538 1664.21,471.789 1666.33,472.041 1668.45,472.293 1670.58,472.547 1672.7,472.8 1674.83,473.055 1676.95,473.309 1679.08,473.565 1681.2,473.821 1683.32,474.078 1685.45,474.335 1687.57,474.592 1689.7,474.851 1691.82,475.109 1693.94,475.369 1696.07,475.629 1698.19,475.889 1700.32,476.15 1702.44,476.411 1704.57,476.673 1706.69,476.936 1708.81,477.198 1710.94,477.462 1713.06,477.726 1715.19,477.99 1717.31,478.255 1719.44,478.52 1721.56,478.786 1723.68,479.052 1725.81,479.319 1727.93,479.586 1730.06,479.853 1732.18,480.121 1734.31,480.39 1736.43,480.659 1738.55,480.928 1740.68,481.198 1742.8,481.468 1744.93,481.738 1747.05,482.009 1749.17,482.28 1751.3,482.552 1753.42,482.824 1755.55,483.096 1757.67,483.369 1759.8,483.642 1761.92,483.916 1764.04,484.19 1766.17,484.464 1768.29,484.739 1770.42,485.014 1772.54,485.289 1774.67,485.565 1776.79,485.841 1778.91,486.117 1781.04,486.394 1783.16,486.671 1785.29,486.949 1787.41,487.226 1789.53,487.504 1791.66,487.783 1793.78,488.061 1795.91,488.34 1798.03,488.619 1800.16,488.899 1802.28,489.179 1804.4,489.459 1806.53,489.739 1808.65,490.02 1810.78,490.301 1812.9,490.582 1815.03,490.864 1817.15,491.146 1819.27,491.428 1821.4,491.71 1823.52,491.993 1825.65,492.276 1827.77,492.559 1829.89,492.842 1832.02,493.126 1834.14,493.41 1836.27,493.694 1838.39,493.979 1840.52,494.263 1842.64,494.548 1844.76,494.833 1846.89,495.119 1849.01,495.404 1851.14,495.69 1853.26,495.976 1855.39,496.263 1857.51,496.549 1859.63,496.836 1861.76,497.123 1863.88,497.41 1866.01,497.698 1868.13,497.985 1870.26,498.273 1872.38,498.561 1874.5,498.849 1876.63,499.138 1878.75,499.427 1880.88,499.716 1883,500.005 1885.12,500.294 1887.25,500.583 1889.37,500.873 1891.5,501.163 1893.62,501.453 1895.75,501.743 1897.87,502.034 1899.99,502.324 1902.12,502.615 1904.24,502.906 1906.37,503.197 1908.49,503.488 1910.62,503.78 1912.74,504.072 1914.86,504.363 1916.99,504.655 1919.11,504.948 1921.24,505.24 1923.36,505.532 1925.48,505.825 1927.61,506.118 1929.73,506.411 1931.86,506.704 1933.98,506.997 1936.11,507.291 1938.23,507.584 1940.35,507.878 1942.48,508.172 1944.6,508.466 1946.73,508.76 1948.85,509.054 1950.98,509.349 1953.1,509.643 1955.22,509.938 1957.35,510.233 1959.47,510.528 1961.6,510.823 1963.72,511.119 1965.84,511.414 1967.97,511.709 1970.09,512.005 1972.22,512.301 1974.34,512.597 1976.47,512.893 1978.59,513.189 1980.71,513.485 1982.84,513.782 1984.96,514.078 1987.09,514.375 1989.21,514.672 1991.34,514.969 1993.46,515.266 1995.58,515.563 1997.71,515.86 1999.83,516.157 2001.96,516.455 2004.08,516.753 2006.21,517.05 2008.33,517.348 2010.45,517.646 2012.58,517.944 2014.7,518.242 2016.83,518.54 2018.95,518.839 2021.07,519.137 2023.2,519.436 2025.32,519.734 2027.45,520.033 2029.57,520.332 2031.7,520.631 2033.82,520.93 2035.94,521.229 2038.07,521.528 2040.19,521.827 2042.32,522.127 2044.44,522.426 2046.57,522.726 2048.69,523.026 2050.81,523.325 2052.94,523.625 2055.06,523.925 2057.19,524.225 2059.31,524.525 2061.43,524.826 2063.56,525.126 2065.68,525.426 2067.81,525.727 2069.93,526.027 2072.06,526.328 2074.18,526.629 2076.3,526.929 2078.43,527.23 2080.55,527.531 2082.68,527.832 2084.8,528.133 2086.93,528.434 2089.05,528.736 2091.17,529.037 2093.3,529.338 2095.42,529.64 2097.55,529.942 2099.67,530.243 2101.79,530.545 2103.92,530.847 2106.04,531.148 2108.17,531.45 2110.29,531.752 2112.42,532.054 2114.54,532.356 2116.66,532.659 2118.79,532.961 2120.91,533.263 2123.04,533.566 2125.16,533.868 2127.29,534.171 2129.41,534.473 2131.53,534.776 2133.66,535.078 2135.78,535.381 2137.91,535.684 2140.03,535.987 2142.15,536.29 2144.28,536.593 2146.4,536.896 2148.53,537.199 2150.65,537.502 2152.78,537.805 2154.9,538.109 2157.02,538.412 2159.15,538.715 2161.27,539.019 2163.4,539.322 2165.52,539.626 2167.65,539.929 2169.77,540.233 2171.89,540.537 2174.02,540.841 2176.14,541.144 2178.27,541.448 2180.39,541.752 2182.52,542.056 2184.64,542.36 2186.76,542.664 2188.89,542.968 2191.01,543.273 2193.14,543.577 2195.26,543.881 2197.38,544.185 2199.51,544.49 2201.63,544.794 2203.76,545.099 2205.88,545.403 2208.01,545.708 2210.13,546.012 2212.25,546.317 2214.38,546.622 2216.5,546.926 2218.63,547.231 2220.75,547.536 2222.88,547.841 2225,548.146 2227.12,548.451 2229.25,548.756 2231.37,549.061 2233.5,549.366 2235.62,549.671 2237.74,549.976 2239.87,550.281 2241.99,550.586 2244.12,550.892 2246.24,551.197 2248.37,551.502 2250.49,551.808 2252.61,552.113 2254.74,552.419 2256.86,552.724 2258.99,553.03 2261.11,553.335 2263.24,553.641 2265.36,553.946 2267.48,554.252 2269.61,554.558 2271.73,554.864 2273.86,555.169 2275.98,555.475 2278.1,555.781 2280.23,556.087 2282.35,556.393 2284.48,556.699 2286.6,557.005 2288.73,557.311 2290.85,557.617 2292.97,557.923 2295.1,558.229 2297.22,558.535 2299.35,558.842 2301.47,559.148 2303.6,559.454 2305.72,559.76 2307.84,560.067 2309.97,560.373 2312.09,560.679 2314.22,560.986 2316.34,561.292 2318.47,561.599 2320.59,561.905 2322.71,562.212 2324.84,562.518 2326.96,562.825 2329.09,563.131 2331.21,563.438 2333.33,563.745 2335.46,564.051 2337.58,564.358 2339.71,564.665 2341.83,564.972 2343.96,565.278 2346.08,565.585 2348.2,565.892 2350.33,566.199 2352.45,566.506 2354.58,566.813 2356.7,567.12 2358.83,567.427 2360.95,567.734 2363.07,568.041 2365.2,568.348 2367.32,568.655 2369.45,568.962 2371.57,569.269 2373.69,569.576 2375.82,569.883 2377.94,570.191 2380.07,570.498 2382.19,570.805 2384.32,571.112 2386.44,571.42 2388.56,571.727 2390.69,572.034 2392.81,572.342 2394.94,572.649 2397.06,572.956 2399.19,573.264 2401.31,573.571 2403.43,573.879 2405.56,574.186 2407.68,574.494 2409.81,574.801 2411.93,575.109 2414.05,575.416 2416.18,575.724 2418.3,576.032 2420.43,576.339 2422.55,576.647 2424.68,576.955 2426.8,577.262 2428.92,577.57 2431.05,577.878 2433.17,578.186 2435.3,578.493 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M2091.13 1075.08 L2423.97 1075.08 L2423.97 802.924 L2091.13 802.924  Z\" fill=\"#ffffff\" fill-rule=\"evenodd\" fill-opacity=\"1\"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#000000; stroke-linecap:round; stroke-linejoin:round; stroke-width:4; stroke-opacity:1; fill:none\" points=\"2091.13,1075.08 2423.97,1075.08 2423.97,802.924 2091.13,802.924 2091.13,1075.08 \"/>\n<polyline clip-path=\"url(#clip300)\" style=\"stroke:#009af9; stroke-linecap:round; stroke-linejoin:round; stroke-width:14; stroke-opacity:1; fill:none\" points=\"2116.15,893.644 2266.26,893.644 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M2351.21 864.004 Q2351.21 868.595 2347.81 872.817 Q2344.45 877.039 2338.95 879.621 Q2333.5 882.162 2327.64 882.162 L2313.38 882.162 L2308.17 903.149 Q2308.13 903.272 2308.01 903.805 Q2307.88 904.297 2307.88 904.584 Q2307.88 905.608 2309.15 905.854 Q2310.47 906.1 2313.38 906.1 Q2315.26 906.1 2315.55 906.428 Q2315.71 906.633 2315.71 907.002 Q2315.71 907.576 2315.55 907.986 Q2315.38 908.355 2315.06 908.478 Q2314.77 908.6 2314.56 908.641 Q2314.36 908.682 2314.03 908.682 Q2313.17 908.682 2311.33 908.6 Q2309.52 908.519 2308.58 908.519 L2303.21 908.437 L2292.55 908.682 Q2291.28 908.682 2291.28 907.658 Q2291.28 906.879 2291.61 906.551 Q2291.94 906.182 2292.31 906.141 Q2292.68 906.1 2293.62 906.1 Q2295.67 906.1 2296.9 905.977 Q2298.13 905.854 2298.91 905.69 Q2299.73 905.485 2300.14 904.911 Q2300.59 904.338 2300.79 903.846 Q2301 903.313 2301.28 902.124 L2312.51 857.036 Q2312.84 855.683 2312.84 855.478 Q2312.84 854.782 2312.43 854.536 Q2312.06 854.249 2311 854.126 Q2308.95 853.962 2307.39 853.962 Q2306.37 853.962 2305.96 853.921 Q2305.59 853.88 2305.26 853.675 Q2304.97 853.429 2304.97 852.937 Q2304.97 852.158 2305.3 851.83 Q2305.67 851.461 2306.08 851.42 Q2306.49 851.338 2307.47 851.338 L2334.69 851.338 Q2342.52 851.338 2346.86 855.068 Q2351.21 858.799 2351.21 864.004 M2343.42 861.996 Q2343.42 853.962 2331.98 853.962 L2323.95 853.962 Q2321.29 853.962 2320.63 854.454 Q2319.97 854.905 2319.4 857.159 L2313.7 879.99 L2325.55 879.99 Q2333.5 879.99 2338.46 875.522 Q2340.72 873.473 2342.07 869.21 Q2343.42 864.947 2343.42 861.996 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2390.29 907.526 Q2390.29 911.715 2388.16 915.761 Q2386.07 919.806 2382.77 922.302 Q2379.47 924.77 2376.11 924.77 Q2374.1 924.77 2372.75 923.68 Q2371.43 922.561 2370.72 920.983 Q2370.17 922.934 2369 927.611 Q2367.82 932.287 2367.82 932.747 Q2367.82 933.005 2367.88 933.12 Q2367.93 933.234 2368.19 933.378 Q2368.45 933.55 2369.08 933.607 Q2369.71 933.693 2370.77 933.693 Q2371.32 933.693 2371.52 933.693 Q2371.75 933.722 2371.95 933.866 Q2372.18 934.009 2372.18 934.325 Q2372.18 935.501 2371.12 935.501 Q2370.17 935.501 2368.22 935.415 Q2366.27 935.329 2365.29 935.329 Q2364.46 935.329 2362.8 935.415 Q2361.13 935.501 2360.36 935.501 Q2359.58 935.501 2359.58 934.812 Q2359.58 934.411 2359.7 934.152 Q2359.79 933.923 2360.02 933.808 Q2360.24 933.722 2360.45 933.693 Q2360.62 933.693 2360.96 933.693 Q2362.28 933.693 2362.86 933.464 Q2363.43 933.263 2363.63 932.833 Q2363.86 932.431 2364.12 931.283 L2370.72 905.116 Q2371.12 903.365 2371.12 902.132 Q2371.12 900.582 2370.63 900.008 Q2370.14 899.435 2369.28 899.435 Q2367.79 899.435 2366.82 901.214 Q2365.84 902.992 2365.01 906.436 Q2364.75 907.382 2364.58 907.583 Q2364.43 907.784 2364 907.784 Q2363.29 907.755 2363.29 907.182 Q2363.29 907.038 2363.52 906.12 Q2363.75 905.173 2364.18 903.796 Q2364.63 902.39 2365.12 901.5 Q2365.41 900.898 2365.67 900.496 Q2365.93 900.095 2366.44 899.463 Q2366.99 898.832 2367.76 898.488 Q2368.54 898.143 2369.48 898.143 Q2371.32 898.143 2372.84 899.234 Q2374.36 900.324 2374.76 902.533 Q2376.4 900.611 2378.41 899.377 Q2380.42 898.143 2382.45 898.143 Q2385.84 898.143 2388.05 900.783 Q2390.29 903.394 2390.29 907.526 M2386.04 904.944 Q2386.04 902.333 2385.04 900.898 Q2384.06 899.435 2382.28 899.435 Q2380.07 899.435 2377.52 901.673 Q2374.99 903.796 2374.48 905.776 L2371.58 917.281 L2371.41 918.228 Q2371.41 918.4 2371.49 918.917 Q2371.61 919.405 2371.92 920.208 Q2372.27 921.011 2372.73 921.729 Q2373.21 922.417 2374.07 922.934 Q2374.96 923.45 2376.05 923.45 Q2377.8 923.45 2379.7 921.901 Q2381.62 920.351 2383.06 917.425 Q2383.94 915.531 2384.98 911.457 Q2386.04 907.354 2386.04 904.944 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><polyline clip-path=\"url(#clip300)\" style=\"stroke:#e26f46; stroke-linecap:round; stroke-linejoin:round; stroke-width:14; stroke-opacity:1; fill:none\" points=\"2116.15,984.364 2266.26,984.364 \"/>\n<path clip-path=\"url(#clip300)\" d=\"M2351.21 960.041 Q2351.21 964.631 2347.81 968.853 Q2344.45 973.075 2338.95 975.658 Q2333.5 978.199 2327.64 978.199 L2313.38 978.199 L2308.17 999.185 Q2308.13 999.308 2308.01 999.841 Q2307.88 1000.33 2307.88 1000.62 Q2307.88 1001.64 2309.15 1001.89 Q2310.47 1002.14 2313.38 1002.14 Q2315.26 1002.14 2315.55 1002.46 Q2315.71 1002.67 2315.71 1003.04 Q2315.71 1003.61 2315.55 1004.02 Q2315.38 1004.39 2315.06 1004.51 Q2314.77 1004.64 2314.56 1004.68 Q2314.36 1004.72 2314.03 1004.72 Q2313.17 1004.72 2311.33 1004.64 Q2309.52 1004.56 2308.58 1004.56 L2303.21 1004.47 L2292.55 1004.72 Q2291.28 1004.72 2291.28 1003.69 Q2291.28 1002.92 2291.61 1002.59 Q2291.94 1002.22 2292.31 1002.18 Q2292.68 1002.14 2293.62 1002.14 Q2295.67 1002.14 2296.9 1002.01 Q2298.13 1001.89 2298.91 1001.73 Q2299.73 1001.52 2300.14 1000.95 Q2300.59 1000.37 2300.79 999.882 Q2301 999.349 2301.28 998.161 L2312.51 953.072 Q2312.84 951.72 2312.84 951.515 Q2312.84 950.818 2312.43 950.572 Q2312.06 950.285 2311 950.162 Q2308.95 949.998 2307.39 949.998 Q2306.37 949.998 2305.96 949.957 Q2305.59 949.916 2305.26 949.711 Q2304.97 949.465 2304.97 948.974 Q2304.97 948.195 2305.3 947.867 Q2305.67 947.498 2306.08 947.457 Q2306.49 947.375 2307.47 947.375 L2334.69 947.375 Q2342.52 947.375 2346.86 951.105 Q2351.21 954.835 2351.21 960.041 M2343.42 958.032 Q2343.42 949.998 2331.98 949.998 L2323.95 949.998 Q2321.29 949.998 2320.63 950.49 Q2319.97 950.941 2319.4 953.195 L2313.7 976.026 L2325.55 976.026 Q2333.5 976.026 2338.46 971.559 Q2340.72 969.509 2342.07 965.246 Q2343.42 960.983 2343.42 958.032 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /><path clip-path=\"url(#clip300)\" d=\"M2381.22 999.23 Q2381.22 1000.84 2380.42 1001.7 Q2379.61 1002.53 2378.52 1002.53 Q2377.63 1002.53 2377.14 1002.01 Q2376.69 1001.5 2376.69 1000.81 Q2376.69 999.804 2377.49 999 Q2378.32 998.197 2379.53 998.168 Q2379.12 997.107 2378.06 996.475 Q2377 995.815 2376.05 995.643 Q2375.14 995.471 2374.22 995.471 Q2372.41 995.471 2371.03 996.045 Q2369.66 996.619 2368.97 997.508 Q2368.28 998.369 2367.96 999.201 Q2367.65 1000.03 2367.65 1000.75 Q2367.65 1001.38 2367.79 1001.9 Q2367.96 1002.39 2368.36 1002.76 Q2368.77 1003.1 2369.05 1003.33 Q2369.37 1003.56 2370.06 1003.76 Q2370.75 1003.96 2371.03 1004.05 Q2371.32 1004.11 2372.12 1004.28 Q2373.79 1004.62 2374.53 1004.82 Q2375.28 1005 2376.26 1005.48 Q2377.26 1005.97 2378.01 1006.75 Q2379.81 1008.55 2379.81 1011.05 Q2379.81 1011.97 2379.5 1013.09 Q2379.21 1014.21 2378.38 1015.61 Q2377.55 1017.02 2376.28 1018.14 Q2375.02 1019.26 2372.84 1020.03 Q2370.69 1020.81 2367.99 1020.81 Q2364.23 1020.81 2361.91 1019.23 Q2359.58 1017.62 2359.58 1015.1 Q2359.58 1013.26 2360.59 1012.26 Q2361.59 1011.22 2362.88 1011.22 Q2363.86 1011.22 2364.46 1011.77 Q2365.07 1012.28 2365.07 1013.26 Q2365.07 1014.58 2364 1015.58 Q2362.94 1016.59 2361.36 1016.39 Q2362.71 1019.49 2368.05 1019.49 Q2370.06 1019.49 2371.61 1018.97 Q2373.19 1018.43 2374.05 1017.68 Q2374.94 1016.9 2375.51 1015.96 Q2376.08 1015.01 2376.26 1014.29 Q2376.46 1013.58 2376.46 1013.03 Q2376.46 1012.08 2376.08 1011.37 Q2375.71 1010.65 2375.19 1010.25 Q2374.71 1009.82 2373.76 1009.47 Q2372.84 1009.1 2372.18 1008.96 Q2371.52 1008.81 2370.34 1008.58 Q2369.8 1008.47 2369.46 1008.41 Q2369.11 1008.33 2368.39 1008.1 Q2367.7 1007.84 2367.22 1007.58 Q2366.76 1007.32 2366.16 1006.86 Q2365.55 1006.4 2365.18 1005.86 Q2364.81 1005.31 2364.55 1004.51 Q2364.29 1003.71 2364.29 1002.76 Q2364.29 1001.9 2364.55 1000.87 Q2364.84 999.832 2365.55 998.627 Q2366.3 997.422 2367.36 996.447 Q2368.42 995.471 2370.2 994.84 Q2372.01 994.18 2374.22 994.18 Q2377.43 994.18 2379.33 995.672 Q2381.22 997.135 2381.22 999.23 Z\" fill=\"#000000\" fill-rule=\"nonzero\" fill-opacity=\"1\" /></svg>\n```\n\nPower evolution of pump and signal along the fiber length.\n:::\n:::\n\n\n\nWith this, we‚Äôve successfully simulated a Raman fiber amplifier using Julia. A signal at 1550 nm traveling in a standard SMF gets amplified over the length of the fiber due to Raman scattering. We just had to input 2 W of pump power at 1450 nm alongside the signal to achieve this effect.\n\n## üìä Benchmarking\n\nNow that we‚Äôve built a working simulation of a Raman fiber amplifier, it‚Äôs time to evaluate how efficiently it runs. After all, one of the key reasons for choosing Julia is its reputation for high-performance scientific computing.\n\nJulia provides a simple macro, `@time`, which gives a quick estimate of execution time. However, for more rigorous benchmarking, especially when comparing performance across implementations, we turn to the `BenchmarkTools.jl` package. It offers the `@btime` macro, which runs the code multiple times and reports the minimum execution time along with memory allocations.\n\nLet‚Äôs benchmark our solver:\n\n::: {#14 .cell execution_count=1}\n``` {.julia .cell-code}\n@btime solve(prob,Tsit5(), save_everystep = false); #<1>\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  15.000 Œºs (85 allocations: 4.59 KiB)\n```\n:::\n:::\n\n\n\n1.  We just want memory allocations done for solving the ODE and not for saving the values, hence `save_everystep = false`\n\nThis result tells us that in executing the code in executing the code `solve(prob,Tsit5(), save_everystep = false)`: - It took about 16 Œºs - It performs 85 heap allocations, consuming about 4.59 KiB of memory.\n\nHeap allocations refer to memory dynamically allocated during runtime. While necessary, excessive allocations can slow down performance. More on heap allocations can be found [here](https://docs.julialang.org/en/v1/manual/performance-tips/) and [here](https://book.sciml.ai/notes/02-Optimizing_Serial_Code/). Fortunately, our current implementation is already quite efficient.\n\n### Why this code runs fast?\n\nAchieving this level of performance isn‚Äôt just about using Julia‚Äîit‚Äôs also about writing optimized code. In writing the code here, I have followed the guidelines of [Code Optimization for Differential Equations](https://docs.sciml.ai/DiffEqDocs/stable/tutorials/faster_ode_example/). For an ODE solver, most of the time will be spent inside the function we are trying to solve. Here‚Äôs what I did to ensure our solver spends minimal time inside the ODE function.:\n\n-   The core function `Raman1!` is written as an in-place function, which avoids unnecessary memory allocations.\n-   Pre-computed values like the frequency ratio $\\nu_{p}/\\nu_{s}$ and unit conversion of parameters outside the ODE function to reduce overhead.\n-   Additionally, type stability is ensured (Can be checked using `@code_typed Raman1!(similar(P0), P0, zspan, a)`)\n\n## üöÄ Making the code run even faster\n\n### Boosting Performance with StaticArrays\n\nWhile our initial simulation is already efficient, we can push performance even further using `StaticArrays.jl` ‚Äî a Julia package designed for small, fixed-size arrays that are allocated on the stack rather than the heap. In Julia, regular arrays are heap-allocated, which means they involve dynamic memory management. For small arrays (like our 2-element power vector), this can be inefficient. Stack-allocated and immutable **StaticArrays** reduces heap allocations and speeds up computation.\n\nTo use StaticArrays, we need to make a few changes:\n\n1.  Use `SA[]` instead of regular array constructors\n    -   `SA[]` creates a `SVector`, a statically sized vector.\n    -   Example: `SA[dPp, dPs]` returns a 2-element static vector.\n2.  Switch to an out-of-place function.\n    -   Our original function `Raman1!` was in-place, meaning it modified an existing array.\n    -   StaticArrays are immutable, so we return a new array instead‚Äîthis is called an out-of-place function.\n\nHere's the updated code:\n\n::: {#16 .cell execution_count=1}\n``` {.julia .cell-code}\nusing StaticArrays \nfunction Raman1_Static(P, a, z)\n    r, Œ±_p, Œ±_s, gR = a\n    Pp, Ps = P\n\n    dPp = -Œ±_p * Pp - r * gR * Pp * Ps # dPp/dz\n    dPs = -Œ±_s * Ps + gR * Pp * Ps   # dPs/dz\n    return SA[dPp, dPs]\nend\n\nP0 = SA[Pp_0, Ps_0];  # (pump , signal)power \na = SA[get_ŒΩ(Œªp)/get_ŒΩ(Œªs), Œ±_lin(Œ±_p), Œ±_lin(Œ±_s), gR];\n\nprob = ODEProblem(Raman1_Static, P0, zspan, a);\n@btime solve(prob, Tsit5(), save_everystep=false);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  5.133 Œºs (25 allocations: 1.92 KiB)\n```\n:::\n:::\n\n\n\nThat‚Äôs a 3x speedup with significantly fewer allocations ‚Äî an impressive gain for such a small change. This is especially valuable when scaling up simulations or running them repeatedly.\n\n### Log-transform of the power-balance equation\n\nWe see that the power evolves exponentially. For a numerical solver with adaptive steps (such as the `Tsit5()`), it has to take smaller steps when values change very rapidly. If we solve for log of power, the values change much gradually and the solver can take larger and less number of steps, potentially speeding up the simulation. For example, in the simulation presented here, the signal power changes in the range of $1 \\times 10^{-3}$ W to about 1 W, which is three orders of magnitude, but in dB scale, it changes from 0 dBm to 30 dBm. Shifting to log-scale also has added advantage as it prevents negative power values and propagation of round-off errors. Using this intuition, lets do some substitution in the power balance equations (@eq-power-balance1). Lets $Q_{s} = \\ln P_{s}$ and $Q_{p} = \\ln P_{p}$. then we have the log-power-balance equation as:\n\n$$\n\\begin{align}\n\\frac{d Q_{s}}{dz} &=  -\\alpha_{s} + g_{R}\\, e^{Q_{p}} \\\\\n\\frac{d Q_{p}}{dz} &=  -\\alpha_{p} - r\\,g_{R}\\, e^{Q_{s}}\n\\end{align}\n$$ {#eq-log-power-balance1}\n\nNow we solve for $Q_p(z)$ and $Q_s(z)$.\n\n::: {#18 .cell execution_count=1}\n``` {.julia .cell-code}\nfunction log_Raman1_Static(Q, a, z)\n    r, Œ±_p, Œ±_s, gR = a\n    Qp, Qs = Q\n\n    dQp = -Œ±_p - r * gR * exp(Qs)\n    dQs = -Œ±_s + gR * exp(Qp)\n\n    return SA[dQp, dQs]\nend\n\nprob = ODEProblem(log_Raman1_Static, log.(P0), zspan, a);\n@btime solve(prob, Tsit5(), save_everystep=false);\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  4.400 Œºs (25 allocations: 1.92 KiB)\n```\n:::\n:::\n\n\n\nWow! That's even faster than the previous implementation with same allocations.\n\n## ‚ú® Bonus: Benchmarking with Python\n\nLets see how does out Julia code stack up against Python ‚Äî the scientist‚Äôs standby ‚Äî for a task like a Raman fiber amplifier simulation using standard ODE solvers? Below is a self-contained Python version (using NumPy and SciPy) ‚Äî the same ODE and parameters.\n\n:::: {.callout-note icon=\"false\" collapse=\"true\" title=\"Python code\"}\n::: {#lst-pythoncode lst-cap=\"\"}\n``` python\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\n# System ODE\ndef Raman1(z, P, freq_ratio, alpha_p, alpha_s, gR):\n  Pp, Ps = P\n  dPp_dz = -gR * Pp * Ps - alpha_p * Pp\n  dPs_dz = gR * freq_ratio * Pp * Ps - alpha_s * Ps\n  return [dPp_dz, dPs_dz]\n\n# Solve ODE\nsol = solve_ivp(Raman1, (0,50.0) , [2.0, 1e-3],\n              args=(1550.0/1450.0, 0.23/4.343, 0.19/4.343, 0.4))\n```\n:::\n::::\n\nWe use the [PythonCall.jl](https://juliapy.github.io/PythonCall.jl/stable/) package to run native Python code from Julia. Here, we define our Python code as a string in Julia using the syntax `py\"\"\"<python code here>\"\"\"`. We wrap the above Python [code @lst-pythoncode] within a python function returning the result of `sol` (ODE solved in python) as a dictionary that can be passed to Julia.\n\n::: {#20 .cell execution_count=1}\n``` {.julia .cell-code code-fold=\"true\"}\nusing PyCall\n# python code as a string\npy\"\"\"\nimport numpy as np\nfrom scipy.integrate import solve_ivp\n\ndef raman_amp_python():\n  # System ODE\n  def Raman1(z, P, freq_ratio, alpha_p, alpha_s, gR):\n      Pp, Ps = P\n      dPp_dz = -gR * Pp * Ps - alpha_p * Pp\n      dPs_dz = gR * freq_ratio * Pp * Ps - alpha_s * Ps\n      return [dPp_dz, dPs_dz]\n\n  # Solve ODE\n  sol = solve_ivp(Raman1, (0,50.0) , [2.0, 1e-3],\n                  args=(1550.0/1450.0, 0.23/4.343, 0.19/4.343, 0.4))\n  return {\n        \"z\": sol.t,\n        \"Ps\": sol.y[0],\n        \"Pp\": sol.y[1]\n    }\n\"\"\"\n# Calling the Python code from Julia\npy_raman_amp = py\"raman_amp_python\"\nresult = py_raman_amp();\n```\n:::\n\n\n\nOnce we have successfully solved the ODE in python by calling it from Julia, now let's benchmark it.\n\n::: {#22 .cell execution_count=1}\n``` {.julia .cell-code}\n@btime py_raman_amp();\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  2.318 ms (126 allocations: 5.37 KiB)\n```\n:::\n:::\n\n\n\nThe python implementation of the same code is 130x slower than our first Julia implementation and more than 400x slower than out StaticArray based Julia code.\n\n|         Code         | Time taken | Allocations | Memory used |\n|:--------------------:|:----------:|:-----------:|:-----------:|\n|        Python        |   \\~2 ms   |     126     |  5.37 KiB   |\n|    Julia (Basic)     |  \\~15 Œºs   |     85      |  4.59 KiB   |\n| Julia (StaticArrays) |   \\~5 Œºs   |     25      |  1.92 KiB   |\n| Julia(Log-transform) |  \\~4.3 Œºs  |     25      |  1.92 KiB   |\n\n: Comparision of benchmark results\n\n## Conclusion\n\nIn this post, we looked at how to simulate Raman amplifiers using Julia. We then tried to optimize the code for performance and finally compared our Julia code with the Python implementation.\n\nHere, I have simulated the co-pumped and single Raman shift based amplifier. In subsequent posts, I‚Äôll explore multiple Raman shifts and also counter-pumped case.\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}