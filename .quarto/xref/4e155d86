{"entries":[{"caption":"","key":"eq-power-balance1","order":{"number":1,"section":[0,4,2,0,0,0,0]}},{"caption":"Diagram illustrating the power-balance equation","key":"fig-power-balance","order":{"number":1,"section":[0,4,2,0,0,0,0]}},{"caption":"Power evolution of pump and signal along the fiber length.","key":"fig-raman1","order":{"number":2,"section":[0,5,2,4,0,0,0]}},{"caption":"","key":"lst-pythoncode","order":{"number":1,"section":[0,8,0,0,0,0,0]}}],"headings":["what-youll-learn-in-this-post","what-is-raman-fiber-amplifier-and-why-simulate-it","why-julia","basic-theory-refresher","brief-overview-of-raman-amplification","the-power-balance-equation","key-assumptions","performing-the-simulation-in-julia","setting-up","coding-the-physics","step-1-define-the-simulation-parameters","step-2-set-up-the-ode-system","step-3-configure-and-solve-the-ode-system","step-4-visualize-the-results","benchmarking","why-this-code-runs-fast","making-the-code-run-even-faster","boosting-performance-with-staticarrays","bonus-benchmarking-with-python"]}